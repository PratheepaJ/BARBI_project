rm(list = ls())
library(DESeq2)
library(phyloseq)
library(dplyr)
library(tidyr)
library(ggplot2)
ps <- readRDS("./Data/pshf.rds")
set1 <- c("FL002","FL003","FL004","FL005")
set2 <- c("FL006","FL007","FL008","FL009","FL010","FL011")
#       the following negative controls are in set 2 only.
nctrl <- c("Water.Keck.1","Phix.1","Phix.2","Water.ctrl.1","Water.ctrl.2")
ext.num <- sample_data(ps)$SubjectName
blocks <-ifelse(ext.num %in% set1, "Set1", "Set2")
sample_data(ps)$block <- blocks
if (dim(otu_table(ps))[1] != ntaxa(ps)){otu_table(ps) <- t(otu_table(ps))}
#   total reads per sample
totalReads <- colSums(otu_table(ps))
#   distribution of total reads per sample
hist(log(totalReads),yaxs = "i",xaxs = "i",main = "Distribution of total reads per sample",breaks = 50)
#   select plasma samples and negative controls
ps <- subset_samples(ps,Sample_Type %in% c("Plasma","Control"))
ps <- prune_taxa(taxa_sums(ps) > 0, ps)
ps_plasma <- subset_samples(ps,Sample_Type %in% c("Plasma"))
prevTaxaP <- apply(otu_table(ps_plasma), 1 ,function(x){sum(x>0)})
Contaminants1 <- names(prevTaxaP)[prevTaxaP==0]
ps <- prune_taxa(prevTaxaP > 0,ps)
psR <- transform_sample_counts(ps, function(x){
x <- rank(x)
x <- x-1000
x[x<1] <- 1
return(x)
})
library(ade4)
abund_ranks <- otu_table(psR) %>% t %>% data.frame
ranks_pca <- dudi.pca(abund_ranks, scannf = F, nf = 3)
row_scores <- data.frame(li = ranks_pca$li,
SampleCode = rownames(abund_ranks))
#row_scores$SampleID <- as.character(row_scores$SampleID)
#samdf <- sample_data(psR) %>% data.frame
#samdf$SampleID <- as.character(samdf$SampleID)
row_scores <- row_scores %>%
left_join(sample_data(psR))
row_scores$block <- factor(row_scores$block)
evals_prop <- 100 * (ranks_pca$eig / sum(ranks_pca$eig))
evals <- ranks_pca$eig
p <- ggplot() +
geom_point(data = row_scores, aes(x = li.Axis1, y = li.Axis2, shape = Sample_Type, color = block))  +
guides(col = guide_legend(override.aes = list(size = 3))) +
labs(x = sprintf("Axis1 [%s%% variance]", round(evals_prop[1], 2)),
y = sprintf("Axis2 [%s%% variance]", round(evals_prop[2], 2))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878", fill = alpha("white", 0)), plot.title = element_text(hjust = .5)) + guides(shape = guide_legend(title="Sample Type"))
# coord_fixed(sqrt(ranks_pca$eig[2] / ranks_pca$eig[1])) +
p
ggsave("./Figures/PCA_flossing.eps", plot=p, width = 12,height = 8)
p
ggsave("./Figures/PCA_SIRS.eps", plot=p, width = 12, height = 8)
