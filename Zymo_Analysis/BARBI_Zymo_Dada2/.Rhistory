theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5)) + guides(color = guide_legend(title="Sample"), shape = guide_legend(title="Sample Type"))
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 8, height = 8)
plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType",title="")+
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4)) + guides(color = guide_legend(title="Sample"), shape = guide_legend(title="Sample Type"))
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
# p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
#   geom_text(aes(label = Name), size = 4, hjust = 1) +
#   theme_bw() +
#   coord_fixed(sqrt(evals[2] / evals[1])) +
#   theme(plot.title = element_text(hjust = 0.5))
#
name.label <- c("","","1:1","1:6","1:(6^2)","1:(6^3)","1:(6^4)","1:(6^5)","1:(6^6)", "1:(6^7)",as.character(rep("",8)))
sample_data(ps.prop)$name.label <- name.label
sample_data(ps.prop)$name.label <- factor(sample_data(ps.prop)$name.label, levels = c("","1:1","1:6","1:(6^2)" ,"1:(6^3)" ,"1:(6^4)", "1:(6^5)" ,"1:(6^6)","1:(6^7)"))
levels(sample_data(ps.prop)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType",title="")+
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4)) + guides(color = guide_legend(title="Sample"), shape = guide_legend(title="Sample Type"))
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 8, height = 8)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
# p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
#   geom_text(aes(label = Name), size = 4, hjust = 1) +
#   theme_bw() +
#   coord_fixed(sqrt(evals[2] / evals[1])) +
#   theme(plot.title = element_text(hjust = 0.5))
#
name.label <- c("Control","Control","1:1","1:6","1:(6^2)","1:(6^3)","1:(6^4)","1:(6^5)","1:(6^6)", "1:(6^7)",as.character(rep("Control",8)))
sample_data(ps.prop)$name.label <- name.label
sample_data(ps.prop)$name.label <- factor(sample_data(ps.prop)$name.label, levels = c("Control","1:1","1:6","1:(6^2)" ,"1:(6^3)" ,"1:(6^4)", "1:(6^5)" ,"1:(6^6)","1:(6^7)"))
levels(sample_data(ps.prop)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType",title="")+
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4)) + guides(color = guide_legend(title="Sample"), shape = guide_legend(title="Sample Type"))
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 8, height = 8)
plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType",title="")+
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4), legend.position="bottom")
+ guides(color = guide_legend(title="Sample"), shape = guide_legend(title="Sample Type"))
plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType",title="")+
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4), legend.position="bottom") +
guides(color = guide_legend(title="Sample"), shape = guide_legend(title="Sample Type"))
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
# p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
#   geom_text(aes(label = Name), size = 4, hjust = 1) +
#   theme_bw() +
#   coord_fixed(sqrt(evals[2] / evals[1])) +
#   theme(plot.title = element_text(hjust = 0.5))
#
name.label <- c("Control","Control","1:1","1:6","1:(6^2)","1:(6^3)","1:(6^4)","1:(6^5)","1:(6^6)", "1:(6^7)",as.character(rep("Control",8)))
sample_data(ps.prop)$name.label <- name.label
sample_data(ps.prop)$name.label <- factor(sample_data(ps.prop)$name.label, levels = c("Control","1:1","1:6","1:(6^2)" ,"1:(6^3)" ,"1:(6^4)", "1:(6^5)" ,"1:(6^6)","1:(6^7)"))
levels(sample_data(ps.prop)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType",title="")+
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4), legend.position="bottom") +
guides(color = guide_legend(title="Sample"), shape = guide_legend(title="Sample Type"))
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 8, height = 8)
plot_ordination(ps.prop, ord.mds.bray, color="name.label",title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4), legend.position="bottom") +
guides(color = guide_legend(title="Sample"))
plot_ordination(ps.prop, ord.mds.bray, color="name.label",title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4)) +
guides(color = guide_legend(title="Sample"))
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
# p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
#   geom_text(aes(label = Name), size = 4, hjust = 1) +
#   theme_bw() +
#   coord_fixed(sqrt(evals[2] / evals[1])) +
#   theme(plot.title = element_text(hjust = 0.5))
#
name.label <- c("Negative Control","Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)","Standard 1:(6^3)","Standard 1:(6^4)","Standard 1:(6^5)","Standard 1:(6^6)", "1:(6^7)",as.character(rep("Negative Control",8)))
sample_data(ps.prop)$name.label <- name.label
sample_data(ps.prop)$name.label <- factor(sample_data(ps.prop)$name.label, levels = c("Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)" ,"Standard 1:(6^3)" ,"Standard 1:(6^4)", "Standard 1:(6^5)" ,"Standard 1:(6^6)","Standard 1:(6^7)"))
levels(sample_data(ps.prop)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_ordination(ps.prop, ord.mds.bray, color="name.label",title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4)) +
guides(color = guide_legend(title="Sample"))
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 8, height = 8)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
# p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
#   geom_text(aes(label = Name), size = 4, hjust = 1) +
#   theme_bw() +
#   coord_fixed(sqrt(evals[2] / evals[1])) +
#   theme(plot.title = element_text(hjust = 0.5))
#
name.label <- c("Negative Control","Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)","Standard 1:(6^3)","Standard 1:(6^4)","Standard 1:(6^5)","Standard 1:(6^6)", "Standard 1:(6^7)",as.character(rep("Negative Control",8)))
sample_data(ps.prop)$name.label <- name.label
sample_data(ps.prop)$name.label <- factor(sample_data(ps.prop)$name.label, levels = c("Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)" ,"Standard 1:(6^3)" ,"Standard 1:(6^4)", "Standard 1:(6^5)" ,"Standard 1:(6^6)","Standard 1:(6^7)"))
levels(sample_data(ps.prop)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType", title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4)) +
guides(color = guide_legend(title="Sample")) + scale_shape_discrete(guide = FALSE)
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 8, height = 8)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
# p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
#   geom_text(aes(label = Name), size = 4, hjust = 1) +
#   theme_bw() +
#   coord_fixed(sqrt(evals[2] / evals[1])) +
#   theme(plot.title = element_text(hjust = 0.5))
#
name.label <- c("Negative Control","Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)","Standard 1:(6^3)","Standard 1:(6^4)","Standard 1:(6^5)","Standard 1:(6^6)", "Standard 1:(6^7)",as.character(rep("Negative Control",8)))
sample_data(ps.prop)$name.label <- name.label
sample_data(ps.prop)$name.label <- factor(sample_data(ps.prop)$name.label, levels = c("Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)" ,"Standard 1:(6^3)" ,"Standard 1:(6^4)", "Standard 1:(6^5)" ,"Standard 1:(6^6)","Standard 1:(6^7)"))
levels(sample_data(ps.prop)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType", title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4)) +
guides(color = guide_legend(title="Sample")) + scale_shape_discrete(guide = FALSE)
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 8, height = 4)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
# p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
#   geom_text(aes(label = Name), size = 4, hjust = 1) +
#   theme_bw() +
#   coord_fixed(sqrt(evals[2] / evals[1])) +
#   theme(plot.title = element_text(hjust = 0.5))
#
name.label <- c("Negative Control","Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)","Standard 1:(6^3)","Standard 1:(6^4)","Standard 1:(6^5)","Standard 1:(6^6)", "Standard 1:(6^7)",as.character(rep("Negative Control",8)))
sample_data(ps.prop)$name.label <- name.label
sample_data(ps.prop)$name.label <- factor(sample_data(ps.prop)$name.label, levels = c("Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)" ,"Standard 1:(6^3)" ,"Standard 1:(6^4)", "Standard 1:(6^5)" ,"Standard 1:(6^6)","Standard 1:(6^7)"))
levels(sample_data(ps.prop)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType", title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4), plot.margin=grid::unit(c(0,0,0,0), "mm")) +
guides(color = guide_legend(title="Sample")) + scale_shape_discrete(guide = FALSE)
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 8, height = 4)
plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType", title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4), plot.margin = grid::unit(c(0,0.1,0,0), "mm")) +
guides(color = guide_legend(title="Sample")) + scale_shape_discrete(guide = FALSE)
plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType", title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4), plot.margin = grid::unit(c(0,0,0.1,0), "mm")) +
guides(color = guide_legend(title="Sample")) + scale_shape_discrete(guide = FALSE)
plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType", title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4), plot.margin = grid::unit(c(0.1,0,0,0), "mm")) +
guides(color = guide_legend(title="Sample")) + scale_shape_discrete(guide = FALSE)
plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType", title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4)) +
guides(color = guide_legend(title="Sample")) + scale_shape_discrete(guide = FALSE)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
# p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
#   geom_text(aes(label = Name), size = 4, hjust = 1) +
#   theme_bw() +
#   coord_fixed(sqrt(evals[2] / evals[1])) +
#   theme(plot.title = element_text(hjust = 0.5))
#
name.label <- c("Negative Control","Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)","Standard 1:(6^3)","Standard 1:(6^4)","Standard 1:(6^5)","Standard 1:(6^6)", "Standard 1:(6^7)",as.character(rep("Negative Control",8)))
sample_data(ps.prop)$name.label <- name.label
sample_data(ps.prop)$name.label <- factor(sample_data(ps.prop)$name.label, levels = c("Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)" ,"Standard 1:(6^3)" ,"Standard 1:(6^4)", "Standard 1:(6^5)" ,"Standard 1:(6^6)","Standard 1:(6^7)"))
levels(sample_data(ps.prop)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType", title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4)) +
guides(color = guide_legend(title="Sample")) + scale_shape_discrete(guide = FALSE)
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 8, height = 4)
ps.top <- ps
ot <- otu_table(ps.top) %>% data.frame %>% as.matrix
geo_mean <- function(x) {
if(all(x == 0)){
val <- 0
}else{
val <- exp(sum(log(x[x > 0]))/length(x))
}
return(val)
}
geom_mean_row <- apply(ot, 1, FUN = geo_mean)
sj <- estimateSizeFactorsForMatrix(ot, median, geoMeans = geom_mean_row)
ot.trans <- t(asinh(t(ot)/sj))
ps.top <- phyloseq(otu_table(ot.trans, taxa_are_rows = TRUE), sample_data(ps.top), tax_table(ps.top))
top <- names(sort(taxa_sums(ps.top), decreasing=TRUE))[1:30]
ps.top <- prune_taxa(top, ps.top)
otu_table(ps.top) <- otu_table(ps.top) +1
p <- plot_heatmap(ps.top, sample.label = "Name", taxa.label="Genus", sample.order = c(ncont,stan))
p <- p + guides(fill = guide_legend(title="asinh abundance"))
p
ggsave("./Figures/heatmap_top.eps", plot = p, width = 12, height = 8)
true.com.ASV <- taxa_names(ps)[c(2:8,11,17,22,37)]
# true.com.ASV <- taxa_names(ps)[which((tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas")))]
# true.com.ASV <- taxa_names(ps)[which((tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas"))&(!is.na(tax_table(ps)[,7])))]
diluted.sample.names <- sample_names(ps)[3:10]
trueSeq <- function(sample.name, true.com.ASV){
df.sample.i <- data.frame(ot = otu_table(ps)[, sample.name])
names(df.sample.i) <- "ot"
df.sample.i <- mutate(df.sample.i, ASV = rownames(df.sample.i))
df.sample.i.true.seq <- filter(df.sample.i, (ot > 0) & (as.character(ASV) %in% true.com.ASV))
true.seq.sample.i <- as.character(df.sample.i.true.seq$ASV)
return(true.seq.sample.i)
}
true.seq.all.samples <- lapply(diluted.sample.names, FUN = trueSeq, true.com.ASV = true.com.ASV)
true.seq.all.samples
lapply(true.seq.all.samples, function(x) {length(x)})
length(unique(unlist(true.seq.all.samples)))
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu)*100)
ps.true <- prune_taxa(unique(unlist(true.seq.all.samples)), ps)
ps.prop.true <- prune_taxa(taxa_names(ps.true), ps.prop)
dt <- otu_table(subset_samples(ps.prop.true, SampleType == "Standard"))%>% data.frame()
colnames(dt) <- sample_data(subset_samples(ps.prop.true, SampleType == "Standard"))$Name
#rownames(dt) <- df.ASV$ASV.Genus[which(as.character(df.ASV$ASV.Genus.Species) %in% rownames(dt))]
rownames(dt) <- df.ASV$ASV.Genus.Species[which(as.character(df.ASV$ASV.Genus.Species) %in% rownames(dt))]
library(knitr)
kable(dt)
library(xtable)
xtable(dt, type = "latex", file = "./Results/Mircobiome_composition.tex", digits = 0)
colSums(dt)
round(colSums(dt), digits =0)
ps <- prune_taxa(taxa_sums(ps) > 0, ps)
ps.standard <- subset_samples(ps, SampleType %in% c("Standard"))
prevTaxaP <- apply(otu_table(ps.standard), 1, function(x){sum(x>0)})
Contaminants1 <- names(prevTaxaP)[prevTaxaP == 0]
length(Contaminants1)
ps <- prune_taxa(prevTaxaP > 0, ps)
ps
ps
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, fig.width = 18, fig.height = 12)
#library(BARBI)
library(devtools)
library(phyloseq)
library(DESeq2)
library(dplyr)
library(tidyr)
library(R.utils)
library(BiocParallel)
library(doParallel)
library(parallel)
library(HDInterval)
library(grid)
library(xtable)
library(gtable)
library(gridExtra)
library(BiocStyle)
library(magrittr)
library(ggplot2)
sourceDirectory("./R")
theme_set(theme_bw())
ncores <- as.integer(Sys.getenv("SLURM_NTASKS"))
if(is.na(ncores)) ncores <- parallel::detectCores()
ps <- readRDS("./Data/ps_zymo.rds")
if(dim(otu_table(ps))[1]!=ntaxa(ps)){otu_table(ps) <- t(otu_table(ps))}
ncont <- paste0("NegativeControl.",seq(1,10))
stan <- paste0("Standard.Dilution.1.",c(1,6,36,216,1296,7776,46656,279936))
#stan <- c(paste0("Standard.Dilution.1.",c(1,6,36,216,1296,7776,46656)),"StandardDilution.1.279936")
sample_data(ps)$Name <- factor(sample_data(ps)$Name, levels = c(ncont,stan))
sample_names(ps) <- as.character(sample_data(ps)$Name)
ASV <- as.character(paste0("ASV_",seq(1,ntaxa(ps))))
ASV.Genus <- paste0("ASV_",seq(1,ntaxa(ps)),"_",as.character(tax_table(ps)[,6]))
ASV.Genus.Species <- paste0(ASV,"_",as.character(tax_table(ps)[,6]),"_", as.character(tax_table(ps)[,7]))
df.ASV <- data.frame(seq.variant = taxa_names(ps), ASV = ASV, ASV.Genus = ASV.Genus, ASV.Genus.Species = ASV.Genus.Species)
taxa_names(ps) <- df.ASV$ASV.Genus.Species
library(ggrepel)
ps.alpha <- ps
Pi <- c(18.58,2.03,14.91,.29,13.68,11.28,14.59,1.46,8.43,10.33,4.42)
Pi <- Pi/100
true.shannon.index <- sum((Pi * log(Pi))*(-1))
true.shannon.index
Pi <- c(18.58,2.03,14.91,.29,13.68,11.28,14.59,1.46,8.43,10.33,4.42)
PiPiminus1 <- Pi*(Pi-1)
NNminus1 <- 100*(100-1)
D <- sum(PiPiminus1)/NNminus1
D
name.label <- c("","","1:1","1:6","1:(6^2)","1:(6^3)","1:(6^4)","1:(6^5)","1:(6^6)", "1:(6^7)",as.character(rep("",8)))
sample_data(ps.alpha)$name.label <- name.label
sample_data(ps.alpha)$name.label <- factor(sample_data(ps.alpha)$name.label)
name.color <- c("Negative Control","Negative Control","1:1","1:6","1:6^2","1:6^3","1:6^4","1:6^5","1:6^6", "1:6^7",as.character(rep("Negative Control",8)))
sample_data(ps.alpha)$name.color <- name.color
sample_data(ps.alpha)$name.color <- factor(sample_data(ps.alpha)$name.color)
# p <- plot_richness(ps.alpha, x="SampleType", measures = c("Shannon"), color = "name.color") + geom_text(aes(label = name.label), size = 4, hjust = -0.2) + ylab("Shannon Index") + expand_limits(y = c(2, 3.5)) + xlab("Sample Type") + theme(axis.text.x=element_blank(), strip.text.x = element_blank())
levels(sample_data(ps.alpha)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_richness(ps.alpha, x="SampleType", measures = c("Shannon"), color = "SampleType") + ylab("Shannon Index") + scale_color_manual(values = c("blue", "brown"))+
expand_limits(y = c(2, 3.5)) +
xlab("Sample Type") +
geom_text_repel(aes(label = name.label), size = 4, direction = "x") +
theme(strip.text.x = element_blank(), axis.text.x = element_text(angle = -360), legend.position = "none") + geom_hline (yintercept= true.shannon.index, colour="red", lty=6, lwd=1)
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 8, height = 8)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
# p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
#   geom_text(aes(label = Name), size = 4, hjust = 1) +
#   theme_bw() +
#   coord_fixed(sqrt(evals[2] / evals[1])) +
#   theme(plot.title = element_text(hjust = 0.5))
#
name.label <- c("Negative Control","Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)","Standard 1:(6^3)","Standard 1:(6^4)","Standard 1:(6^5)","Standard 1:(6^6)", "Standard 1:(6^7)",as.character(rep("Negative Control",8)))
sample_data(ps.prop)$name.label <- name.label
sample_data(ps.prop)$name.label <- factor(sample_data(ps.prop)$name.label, levels = c("Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)" ,"Standard 1:(6^3)" ,"Standard 1:(6^4)", "Standard 1:(6^5)" ,"Standard 1:(6^6)","Standard 1:(6^7)"))
levels(sample_data(ps.prop)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType", title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4)) +
guides(color = guide_legend(title="Sample")) + scale_shape_discrete(guide = FALSE)
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 8, height = 4)
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
p <- plot_bar(ps.top20, x="Name", fill="Genus") +
facet_wrap(~SampleType, scales="free_x") +
theme_bw() + ylab("Relative abundance")
p
ggsave("./Figures/Zymo_barplot_top20.eps", plot=p, width = 12, height = 8)
# true.com.ASV <- taxa_names(ps)[which(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas"))]
true.com.ASV <- taxa_names(ps)[c(2:8,11,17,37,22)]
ps.true <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.true <- prune_taxa(true.com.ASV, ps.true)
p <- plot_bar(ps.true, x="Name", fill="Genus") +
facet_wrap(~SampleType, scales="free_x") +
theme_bw() + ylab("Relative abundance")
p
ggsave("./Figures/Zymo_barplot_true.eps", plot=p, width = 12, height = 8)
# con.ASV <- taxa_names(ps)[which(!(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas")))]
con.ASV <- taxa_names(ps)[-c(2:8,11,17,37,22)]
ps.cont <- prune_taxa(con.ASV, ps)
top20.con <- names(sort(taxa_sums(ps.cont), decreasing=TRUE))[1:20]
ps.cont <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.cont.top20 <- prune_taxa(top20.con, ps.cont)
p <- plot_bar(ps.cont.top20, x="Name", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Figures/Zymo_barplot_cont_top20.eps", plot=p, width = 12, height = 8)
ps.top <- ps
ot <- otu_table(ps.top) %>% data.frame %>% as.matrix
geo_mean <- function(x) {
if(all(x == 0)){
val <- 0
}else{
val <- exp(sum(log(x[x > 0]))/length(x))
}
return(val)
}
geom_mean_row <- apply(ot, 1, FUN = geo_mean)
sj <- estimateSizeFactorsForMatrix(ot, median, geoMeans = geom_mean_row)
ot.trans <- t(asinh(t(ot)/sj))
ps.top <- phyloseq(otu_table(ot.trans, taxa_are_rows = TRUE), sample_data(ps.top), tax_table(ps.top))
top <- names(sort(taxa_sums(ps.top), decreasing=TRUE))[1:30]
ps.top <- prune_taxa(top, ps.top)
otu_table(ps.top) <- otu_table(ps.top) +1
p <- plot_heatmap(ps.top, sample.label = "Name", taxa.label="Genus", sample.order = c(ncont,stan))
p <- p + guides(fill = guide_legend(title="asinh abundance"))
p
ggsave("./Figures/heatmap_top.eps", plot = p, width = 12, height = 8)
true.com.ASV <- taxa_names(ps)[c(2:8,11,17,22,37)]
# true.com.ASV <- taxa_names(ps)[which((tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas")))]
# true.com.ASV <- taxa_names(ps)[which((tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas"))&(!is.na(tax_table(ps)[,7])))]
diluted.sample.names <- sample_names(ps)[3:10]
trueSeq <- function(sample.name, true.com.ASV){
df.sample.i <- data.frame(ot = otu_table(ps)[, sample.name])
names(df.sample.i) <- "ot"
df.sample.i <- mutate(df.sample.i, ASV = rownames(df.sample.i))
df.sample.i.true.seq <- filter(df.sample.i, (ot > 0) & (as.character(ASV) %in% true.com.ASV))
true.seq.sample.i <- as.character(df.sample.i.true.seq$ASV)
return(true.seq.sample.i)
}
true.seq.all.samples <- lapply(diluted.sample.names, FUN = trueSeq, true.com.ASV = true.com.ASV)
true.seq.all.samples
lapply(true.seq.all.samples, function(x) {length(x)})
length(unique(unlist(true.seq.all.samples)))
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu)*100)
ps.true <- prune_taxa(unique(unlist(true.seq.all.samples)), ps)
ps.prop.true <- prune_taxa(taxa_names(ps.true), ps.prop)
dt <- otu_table(subset_samples(ps.prop.true, SampleType == "Standard"))%>% data.frame()
colnames(dt) <- sample_data(subset_samples(ps.prop.true, SampleType == "Standard"))$Name
#rownames(dt) <- df.ASV$ASV.Genus[which(as.character(df.ASV$ASV.Genus.Species) %in% rownames(dt))]
rownames(dt) <- df.ASV$ASV.Genus.Species[which(as.character(df.ASV$ASV.Genus.Species) %in% rownames(dt))]
library(knitr)
kable(dt)
library(xtable)
xtable(dt, type = "latex", file = "./Results/Mircobiome_composition.tex", digits = 0)
blocks <- rep("Set1", nsamples(ps))
sample_data(ps)$block <- blocks
ps
ps <- prune_taxa(taxa_sums(ps) > 0, ps)
ps.standard <- subset_samples(ps, SampleType %in% c("Standard"))
prevTaxaP <- apply(otu_table(ps.standard), 1, function(x){sum(x>0)})
Contaminants1 <- names(prevTaxaP)[prevTaxaP == 0]
length(Contaminants1)
ps <- prune_taxa(prevTaxaP > 0, ps)
ps
195 -53
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, fig.width = 18, fig.height = 12)
#library(BARBI)
library(devtools)
library(phyloseq)
library(DESeq2)
library(dplyr)
library(tidyr)
library(R.utils)
library(BiocParallel)
library(doParallel)
library(parallel)
library(HDInterval)
library(grid)
library(xtable)
library(gtable)
library(gridExtra)
library(BiocStyle)
library(magrittr)
library(ggplot2)
sourceDirectory("./R")
theme_set(theme_bw())
ncores <- as.integer(Sys.getenv("SLURM_NTASKS"))
if(is.na(ncores)) ncores <- parallel::detectCores()
ps <- readRDS("./Data/ps_zymo.rds")
if(dim(otu_table(ps))[1]!=ntaxa(ps)){otu_table(ps) <- t(otu_table(ps))}
ncont <- paste0("NegativeControl.",seq(1,10))
stan <- paste0("Standard.Dilution.1.",c(1,6,36,216,1296,7776,46656,279936))
#stan <- c(paste0("Standard.Dilution.1.",c(1,6,36,216,1296,7776,46656)),"StandardDilution.1.279936")
sample_data(ps)$Name <- factor(sample_data(ps)$Name, levels = c(ncont,stan))
sample_names(ps) <- as.character(sample_data(ps)$Name)
ASV <- as.character(paste0("ASV_",seq(1,ntaxa(ps))))
ASV.Genus <- paste0("ASV_",seq(1,ntaxa(ps)),"_",as.character(tax_table(ps)[,6]))
ASV.Genus.Species <- paste0(ASV,"_",as.character(tax_table(ps)[,6]),"_", as.character(tax_table(ps)[,7]))
df.ASV <- data.frame(seq.variant = taxa_names(ps), ASV = ASV, ASV.Genus = ASV.Genus, ASV.Genus.Species = ASV.Genus.Species)
taxa_names(ps) <- df.ASV$ASV.Genus.Species
library(ggrepel)
ps.alpha <- ps
Pi <- c(18.58,2.03,14.91,.29,13.68,11.28,14.59,1.46,8.43,10.33,4.42)
Pi <- Pi/100
true.shannon.index <- sum((Pi * log(Pi))*(-1))
true.shannon.index
Pi <- c(18.58,2.03,14.91,.29,13.68,11.28,14.59,1.46,8.43,10.33,4.42)
PiPiminus1 <- Pi*(Pi-1)
NNminus1 <- 100*(100-1)
D <- sum(PiPiminus1)/NNminus1
D
name.label <- c("","","1:1","1:6","1:(6^2)","1:(6^3)","1:(6^4)","1:(6^5)","1:(6^6)", "1:(6^7)",as.character(rep("",8)))
sample_data(ps.alpha)$name.label <- name.label
sample_data(ps.alpha)$name.label <- factor(sample_data(ps.alpha)$name.label)
name.color <- c("Negative Control","Negative Control","1:1","1:6","1:6^2","1:6^3","1:6^4","1:6^5","1:6^6", "1:6^7",as.character(rep("Negative Control",8)))
sample_data(ps.alpha)$name.color <- name.color
sample_data(ps.alpha)$name.color <- factor(sample_data(ps.alpha)$name.color)
# p <- plot_richness(ps.alpha, x="SampleType", measures = c("Shannon"), color = "name.color") + geom_text(aes(label = name.label), size = 4, hjust = -0.2) + ylab("Shannon Index") + expand_limits(y = c(2, 3.5)) + xlab("Sample Type") + theme(axis.text.x=element_blank(), strip.text.x = element_blank())
levels(sample_data(ps.alpha)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_richness(ps.alpha, x="SampleType", measures = c("Shannon"), color = "SampleType") + ylab("Shannon Index") + scale_color_manual(values = c("blue", "brown"))+
expand_limits(y = c(2, 3.5)) +
xlab("Sample Type") +
geom_text_repel(aes(label = name.label), size = 4, direction = "x") +
theme(strip.text.x = element_blank(), axis.text.x = element_text(angle = -360), legend.position = "none") + geom_hline (yintercept= true.shannon.index, colour="red", lty=6, lwd=1)
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 8, height = 8)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
# p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
#   geom_text(aes(label = Name), size = 4, hjust = 1) +
#   theme_bw() +
#   coord_fixed(sqrt(evals[2] / evals[1])) +
#   theme(plot.title = element_text(hjust = 0.5))
#
name.label <- c("Negative Control","Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)","Standard 1:(6^3)","Standard 1:(6^4)","Standard 1:(6^5)","Standard 1:(6^6)", "Standard 1:(6^7)",as.character(rep("Negative Control",8)))
sample_data(ps.prop)$name.label <- name.label
sample_data(ps.prop)$name.label <- factor(sample_data(ps.prop)$name.label, levels = c("Negative Control","Standard 1:1","Standard 1:6","Standard 1:(6^2)" ,"Standard 1:(6^3)" ,"Standard 1:(6^4)", "Standard 1:(6^5)" ,"Standard 1:(6^6)","Standard 1:(6^7)"))
levels(sample_data(ps.prop)$SampleType) <- c("Negative Control", "Sandard")
p <- plot_ordination(ps.prop, ord.mds.bray, color="name.label", shape = "SampleType", title="") +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size = 5), legend.text=element_text(size=4)) +
guides(color = guide_legend(title="Sample")) + scale_shape_discrete(guide = FALSE)
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 8, height = 4)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu)*100)
ps.true <- prune_taxa(unique(unlist(true.seq.all.samples)), ps)
ps.prop.true <- prune_taxa(taxa_names(ps.true), ps.prop)
dt <- otu_table(subset_samples(ps.prop.true, SampleType == "Standard"))%>% data.frame()
colnames(dt) <- sample_data(subset_samples(ps.prop.true, SampleType == "Standard"))$Name
#rownames(dt) <- df.ASV$ASV.Genus[which(as.character(df.ASV$ASV.Genus.Species) %in% rownames(dt))]
rownames(dt) <- df.ASV$ASV.Genus.Species[which(as.character(df.ASV$ASV.Genus.Species) %in% rownames(dt))]
library(knitr)
kable(dt)
library(xtable)
xtable(dt, type = "latex", file = "./Results/Mircobiome_composition.tex", digits = 0)
colSums(dt)
round((100 - colSums(dt)),digits = 0)
