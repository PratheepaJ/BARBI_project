knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
#library(BARBI)
library(devtools)
library(phyloseq)
library(DESeq2)
library(dplyr)
library(tidyr)
library(R.utils)
library(BiocParallel)
library(doParallel)
library(parallel)
library(HDInterval)
library(grid)
library(xtable)
library(gtable)
library(gridExtra)
library(BiocStyle)
library(magrittr)
library(ggplot2)
sourceDirectory("./R")
ncores <- as.integer(Sys.getenv("SLURM_NTASKS"))
if(is.na(ncores)) ncores <- parallel::detectCores()
# asv.tab <- read.csv("/Users/jpratheepa31/Dropbox/GitHub/BARBI_project/Re__Result_for_Metagenomic_Data_from_Serial_dilutions_of_Zymo_Mock_Community/in1299.190122.zymo/00.AllSamples.Bac16Sv34/Dada2/abundance.table.csv")
asv.tab <- readr::read_csv("./Data/abundance.table.csv") %>% as.data.frame
asvs <- colnames(asv.tab)
sam.names <- asv.tab[,1]
asv.tab <- select(asv.tab, -seqs)
rownames(asv.tab) <- sam.names
class(asv.tab)
asv.tab <- asv.tab %>% t
sam.tab <- data.frame(SubjectID = colnames(asv.tab), SampleID = colnames(asv.tab))
sam.tab <- mutate(sam.tab, SampleType  = substr(SampleID, 1,8))
rownames(sam.tab) <- as.character(sam.tab$SampleID)
tax.tab <- read.table("./Data/rep_set_tax_assignments.txt", sep="\t")
tx.t <- matrix(nrow = nrow(tax.tab),ncol = 7)
for(i in 1:nrow(tax.tab)){
ASV.sp <- strsplit(as.character(tax.tab[i, "V2"]),";")
for(j in 1:7){
tx.t[i,j] <- ASV.sp[[1]][j]
}
}
rownames(tx.t) <- as.character(tax.tab$V1)
colnames(tx.t) <- c("Kingdon","Phylum", "Class", "Order", "Family","Genus", "Species")
ps <- phyloseq(otu_table(asv.tab, taxa_are_rows = TRUE), sample_data(sam.tab), tax_table(tx.t))
# true.asvs <- names(sort(asv.tab[,"Standard.Dilution.1.1"], decreasing = TRUE))[1:11]
seqNature <- readxl::read_excel("./Data/rep_set_tax_assignments_classified.xlsx")
seqNature <- select(seqNature, 1:3)
names(seqNature) <- c("ASV","Nature", "Taxanomy")
seqNature$Nature <- factor(seqNature$Nature)
if.atleast.one.category <- levels(seqNature$Nature)[-c(1:3)]
trueSeq <- function(sample.name, seqNature, if.atleast.one.category){
df.sample.i <- data.frame(ot = otu_table(ps)[, sample.name])
names(df.sample.i) <- "ot"
df.sample.i <- mutate(df.sample.i, ASV = rownames(df.sample.i))
df.sample.i <- left_join(df.sample.i, seqNature, by = "ASV")
df.sample.i.true.seq <- filter(df.sample.i, (ot > 0) & (Nature %in% if.atleast.one.category))
true.seq.sample.i <- as.character(df.sample.i.true.seq$ASV)
return(true.seq.sample.i)
}
diluted.sample.names <- sample_names(ps)[11:18]
true.seq.all.samples <- lapply(diluted.sample.names, FUN = trueSeq, seqNature = seqNature, if.atleast.one.category = if.atleast.one.category)
ps <- ps
blocks <- rep("Set1", nsamples(ps))
sample_data(ps)$block <- blocks
ps <- prune_taxa(taxa_sums(ps)>0, ps)
ps.standard <- subset_samples(ps, SampleType %in% c("Standard"))
prevTaxaP <- apply(otu_table(ps.standard), 1, function(x){sum(x>0)})
Contaminants1 <- names(prevTaxaP)[prevTaxaP == 0]
length(Contaminants1)
ps <- prune_taxa(prevTaxaP>0, ps)
ps
if(dim(otu_table(ps))[1]!=ntaxa(ps)){otu_table(ps) <- t(otu_table(ps))}
totalReads <- colSums(otu_table(ps))
hist(log(totalReads), yaxs="i", xaxs="i", main="Distribution of total reads per sample", breaks=50)
table(sample_data(ps)$SampleType, sample_data(ps)$block)
colSums(otu_table(ps))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
#library(BARBI)
library(devtools)
library(phyloseq)
library(DESeq2)
library(dplyr)
library(tidyr)
library(R.utils)
library(BiocParallel)
library(doParallel)
library(parallel)
library(HDInterval)
library(grid)
library(xtable)
library(gtable)
library(gridExtra)
library(BiocStyle)
library(magrittr)
library(ggplot2)
sourceDirectory("./R")
ncores <- as.integer(Sys.getenv("SLURM_NTASKS"))
if(is.na(ncores)) ncores <- parallel::detectCores()
# asv.tab <- read.csv("/Users/jpratheepa31/Dropbox/GitHub/BARBI_project/Re__Result_for_Metagenomic_Data_from_Serial_dilutions_of_Zymo_Mock_Community/in1299.190122.zymo/00.AllSamples.Bac16Sv34/Dada2/abundance.table.csv")
asv.tab <- readr::read_csv("./Data/abundance.table.csv") %>% as.data.frame
asvs <- colnames(asv.tab)
sam.names <- asv.tab[,1]
asv.tab <- select(asv.tab, -seqs)
rownames(asv.tab) <- sam.names
class(asv.tab)
asv.tab <- asv.tab %>% t
sam.tab <- data.frame(SubjectID = colnames(asv.tab), SampleID = colnames(asv.tab))
sam.tab <- mutate(sam.tab, SampleType  = substr(SampleID, 1,8))
rownames(sam.tab) <- as.character(sam.tab$SampleID)
tax.tab <- read.table("./Data/rep_set_tax_assignments.txt", sep="\t")
tx.t <- matrix(nrow = nrow(tax.tab),ncol = 7)
for(i in 1:nrow(tax.tab)){
ASV.sp <- strsplit(as.character(tax.tab[i, "V2"]),";")
for(j in 1:7){
tx.t[i,j] <- ASV.sp[[1]][j]
}
}
rownames(tx.t) <- as.character(tax.tab$V1)
colnames(tx.t) <- c("Kingdon","Phylum", "Class", "Order", "Family","Genus", "Species")
ps <- phyloseq(otu_table(asv.tab, taxa_are_rows = TRUE), sample_data(sam.tab), tax_table(tx.t))
# true.asvs <- names(sort(asv.tab[,"Standard.Dilution.1.1"], decreasing = TRUE))[1:11]
seqNature <- readxl::read_excel("./Data/rep_set_tax_assignments_classified.xlsx")
seqNature <- select(seqNature, 1:3)
names(seqNature) <- c("ASV","Nature", "Taxanomy")
seqNature$Nature <- factor(seqNature$Nature)
if.atleast.one.category <- levels(seqNature$Nature)[-c(1:3)]
trueSeq <- function(sample.name, seqNature, if.atleast.one.category){
df.sample.i <- data.frame(ot = otu_table(ps)[, sample.name])
names(df.sample.i) <- "ot"
df.sample.i <- mutate(df.sample.i, ASV = rownames(df.sample.i))
df.sample.i <- left_join(df.sample.i, seqNature, by = "ASV")
df.sample.i.true.seq <- filter(df.sample.i, (ot > 0) & (Nature %in% if.atleast.one.category))
true.seq.sample.i <- as.character(df.sample.i.true.seq$ASV)
return(true.seq.sample.i)
}
diluted.sample.names <- sample_names(ps)[11:18]
true.seq.all.samples <- lapply(diluted.sample.names, FUN = trueSeq, seqNature = seqNature, if.atleast.one.category = if.atleast.one.category)
ps <- ps
blocks <- rep("Set1", nsamples(ps))
sample_data(ps)$block <- blocks
ps
sum(otu_table(ps))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
ot <- otu_table(ps) %>% data.frame
ot.prop <- ot/colSums(ot)*100
View(ot.prop)
ASV <- as.character(paste0("ASV_",seq(1,ntaxa(ps))))
ASV_seqname <- taxa_names(ps)
ASV.Genus.spec <- paste0(as.character(tax_table(ps)[,6]),"_", as.character(tax_table(ps)[,7]),"_",ASV)
ASV.Genus.spec
ot <- otu_table(ps) %>% data.frame
rownames(ot) <- ASV.Genus.spec
ot.prop <- ot/colSums(ot)*100
View(ot.prop)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
#library(BARBI)
library(devtools)
library(phyloseq)
library(DESeq2)
library(dplyr)
library(tidyr)
library(R.utils)
library(BiocParallel)
library(doParallel)
library(parallel)
library(HDInterval)
library(grid)
library(xtable)
library(gtable)
library(gridExtra)
library(BiocStyle)
library(magrittr)
library(ggplot2)
sourceDirectory("./R")
ncores <- as.integer(Sys.getenv("SLURM_NTASKS"))
if(is.na(ncores)) ncores <- parallel::detectCores()
# asv.tab <- read.csv("/Users/jpratheepa31/Dropbox/GitHub/BARBI_project/Re__Result_for_Metagenomic_Data_from_Serial_dilutions_of_Zymo_Mock_Community/in1299.190122.zymo/00.AllSamples.Bac16Sv34/Dada2/abundance.table.csv")
asv.tab <- readr::read_csv("./Data/abundance.table.csv") %>% as.data.frame
asvs <- colnames(asv.tab)
sam.names <- asv.tab[,1]
asv.tab <- select(asv.tab, -seqs)
rownames(asv.tab) <- sam.names
class(asv.tab)
asv.tab <- asv.tab %>% t
sam.tab <- data.frame(SubjectID = colnames(asv.tab), SampleID = colnames(asv.tab))
sam.tab <- mutate(sam.tab, SampleType  = substr(SampleID, 1,8))
rownames(sam.tab) <- as.character(sam.tab$SampleID)
tax.tab <- read.table("./Data/rep_set_tax_assignments.txt", sep="\t")
tx.t <- matrix(nrow = nrow(tax.tab),ncol = 7)
for(i in 1:nrow(tax.tab)){
ASV.sp <- strsplit(as.character(tax.tab[i, "V2"]),";")
for(j in 1:7){
tx.t[i,j] <- ASV.sp[[1]][j]
}
}
rownames(tx.t) <- as.character(tax.tab$V1)
colnames(tx.t) <- c("Kingdon","Phylum", "Class", "Order", "Family","Genus", "Species")
ps <- phyloseq(otu_table(asv.tab, taxa_are_rows = TRUE), sample_data(sam.tab), tax_table(tx.t))
# true.asvs <- names(sort(asv.tab[,"Standard.Dilution.1.1"], decreasing = TRUE))[1:11]
seqNature <- readxl::read_excel("./Data/rep_set_tax_assignments_classified.xlsx")
seqNature <- select(seqNature, 1:3)
names(seqNature) <- c("ASV","Nature", "Taxanomy")
seqNature$Nature <- factor(seqNature$Nature)
if.atleast.one.category <- levels(seqNature$Nature)[-c(1:3)]
trueSeq <- function(sample.name, seqNature, if.atleast.one.category){
df.sample.i <- data.frame(ot = otu_table(ps)[, sample.name])
names(df.sample.i) <- "ot"
df.sample.i <- mutate(df.sample.i, ASV = rownames(df.sample.i))
df.sample.i <- left_join(df.sample.i, seqNature, by = "ASV")
df.sample.i.true.seq <- filter(df.sample.i, (ot > 0) & (Nature %in% if.atleast.one.category))
true.seq.sample.i <- as.character(df.sample.i.true.seq$ASV)
return(true.seq.sample.i)
}
diluted.sample.names <- sample_names(ps)[11:18]
true.seq.all.samples <- lapply(diluted.sample.names, FUN = trueSeq, seqNature = seqNature, if.atleast.one.category = if.atleast.one.category)
ps <- ps
sum(otu_table(ps))
ps
colSums(otu_table(subset_samples(ps,SampleType=="Negative"))
)
colSums(otu_table(subset_samples(ps,SampleType=="Standard"))
)
