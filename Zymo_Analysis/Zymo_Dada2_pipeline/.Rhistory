| truncQ        | maxEE          | Raw reads | filtered reads |loss|
|---------------|:--------------:|----------:|---------------:|---:|
| 5     | inf | $1600 |
| 6      | centered      |   $12 |
| 7 | are neat      |    $1 |
"
cat(tab)
=(323397-323633)*100/323397
(323397-323633)*100/323397
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24),
maxN = 0, truncQ = 5, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
(323397-322633)*100/323397
(323397-129232)*100/323397
(323397-22108)*100/323397
(323397-3658)*100/323397
(323397-2194)*100/323397
tab <- "  # truncQ search
| truncQ        | maxEE          | Raw reads | filtered reads |loss   |
|---------------|:--------------:|----------:|---------------:|------:|
| 5             | inf            | 323397    | 322633         | 0.23% |
| 6             | inf            | 323397    | 322633         | 0.23% |
| 7             | inf            | 323397    | 129232         |60%    |
| 8             | inf            | 323397    |  22108         |93%    |
| 9             | inf            | 323397    |   3658         |98.9%  |
| 10            | inf            | 323397    |   2194         |99.3%  |
"
cat(tab)
tab <- "  truncQ search
| truncQ        | maxEE          | Raw reads | filtered reads |loss   |
|---------------|:--------------:|----------:|---------------:|------:|
| 5             | inf            | 323397    | 322633         | 0.23% |
| 6             | inf            | 323397    | 322633         | 0.23% |
| 7             | inf            | 323397    | 129232         |60%    |
| 8             | inf            | 323397    |  22108         |93%    |
| 9             | inf            | 323397    |   3658         |98.9%  |
| 10            | inf            | 323397    |   2194         |99.3%  |
"
cat(tab)
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24), maxEE = c(2, 2),
maxN = 0, truncQ = 6, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24), maxEE = c(3, 3),
maxN = 0, truncQ = 6, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24), maxEE = c(4, 4),
maxN = 0, truncQ = 6, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
(323397-101362)/323397*100
(323397-155451)/323397*100
(323397-195793)/323397*100
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24), maxEE = c(5, 5),
maxN = 0, truncQ = 6, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
(323397-225519)/323397*100
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24), maxEE = c(6, 6),
maxN = 0, truncQ = 6, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
(323397-248425)/323397*100
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24), maxEE = c(7, 7),
maxN = 0, truncQ = 6, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
(323397-266167)/323397*100
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24), maxEE = c(8, 8),
maxN = 0, truncQ = 6, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
(323397-280128)/323397*100
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24), maxEE = c(3, 6),
maxN = 0, truncQ = 6, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24), maxEE = c(4, 6),
maxN = 0, truncQ = 6, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
(323397-156084)/323397*100
(323397-196333)/323397*100
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24), maxEE = c(6, 6),
maxN = 0, truncQ = 6, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(320, 180), trimLeft = c(16, 24), maxEE = c(6, 6),
maxN = 0, truncQ = 2, rm.phix=TRUE,
compress=TRUE, multithread=TRUE)
out
colSums(out)
x <- as.character("AGCCAGGAATCTTGCGCAATGGGCGAAAGCCTGACGCAGCAACGCCGCGTGGGCGATGAAGGCCTTCGGGTCGTAAAGCCCTGTTGTCGGGGACGAAGGGCGAAGGGTTAATAGCCCCTAGCCTGACGGTACCCGACGAGGAAGCCCCGGCTAACTACGTGCCAGCAGCCGCGGTAATACGTAGGGGGCGAGCGTTGTCCGGAATCACTGGGCGTAAAGAGCGTGTAGGCGGCCCGGTAAGTCTGCTGTGAAAACCCGGGGCTCAACCCCGGGCGTGCAGTGGAAACTGCCGGGCTAGAGGGCGGCAGAGGCGAGTGGAATTCCCGGTGTAGCGGTGAAATGCGCAGATATCGGGAGGAACACCAGTAGCGAAGGCGGCTCGCTGGGCCGTCCCTGACGCTGAGACGCGAAAGCTAGGGGAGCGAA")
nchar(x)
ps <- readRDS("./Data/ps_zymo.rds")
ps <- readRDS("./Data/ps_zymo.rds")
if(dim(otu_table(ps))[1]!=ntaxa(ps)){otu_table(ps) <- t(otu_table(ps))}
sum(otu_table(ps))
summary(colSums(otu_table(subset_samples(ps, SampleType == "Standard"))))
summary(colSums(otu_table(subset_samples(ps, SampleType == "Negative"))))
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = sampleID),size=3, hjust = 0, nudge_x = 0.05)
p
ggsave("./Zymo_alpha_diversity.eps", plot=p, width = 12, height = 8)
true.com.ASV <- which(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonell", "Pseudomonas"))
true.genus <- taxa_names(ps)[true.com.ASV]
true.genus
ps.true <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
true.com.ASV <- which(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonell", "Pseudomonas"))
true.genus <- taxa_names(ps)[true.com.ASV]
ps.true <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.true <- prune_taxa(true.com.ASV, ps.true)
true.com.ASV <- taxa_names(ps)[which(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonell", "Pseudomonas"))]
true.genus <- taxa_names(ps)[true.com.ASV]
ps.true <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.true <- prune_taxa(true.com.ASV, ps.true)
p <- plot_bar(ps.true, x="sampleID", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Zymo_true_genus_barplot.eps", plot=p, width = 12, height = 8)
true.com.ASV <- taxa_names(ps)[which(!(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonell", "Pseudomonas")))]
length(true.com.ASV)
true.com.ASV <- taxa_names(ps)[which(!(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonell", "Pseudomonas")))]
true.genus <- taxa_names(ps)[true.com.ASV]
ps.true <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.true <- prune_taxa(true.com.ASV, ps.true)
p <- plot_bar(ps.true, x="sampleID", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Zymo_true_genus_cont.eps", plot=p, width = 12, height = 8)
con.ASV <- taxa_names(ps)[which(!(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonell", "Pseudomonas")))]
ps.cont <- prune_taxa(con.ASV, ps)
ps.cont
top20.con <- names(sort(taxa_sums(ps.cont), decreasing=TRUE))[1:20]
head(top20.con)
ps.cont <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
con.ASV <- taxa_names(ps)[which(!(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonell", "Pseudomonas")))]
ps.cont <- prune_taxa(con.ASV, ps)
top20.con <- names(sort(taxa_sums(ps.cont), decreasing=TRUE))[1:20]
ps.cont <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.cont.top20 <- prune_taxa(top20.con, ps.cont)
p <- plot_bar(ps.cont.top20, x="sampleID", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Zymo_cont_genus_barplot.eps", plot=p, width = 12, height = 8)
true.com.ASV <- which(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas"))
ot.prop <- ot/colSums(ot)*100
true.com.ASV <- taxa_names(ps)[which(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas"))]
true.genus <- taxa_names(ps)[true.com.ASV]
ps.true <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.true <- prune_taxa(true.com.ASV, ps.true)
p <- plot_bar(ps.true, x="sampleID", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Zymo_true_genus_barplot.eps", plot=p, width = 12, height = 8)
6*6*6
248425*4
75521200
248425*4*18
75521200/248425
38754300/248425
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dada2); packageVersion("dada2")
library(magrittr)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dada2); packageVersion("dada2")
library(magrittr)
library(dplyr)
path <- "RawSeq"
list.files(path)
# Forward and reverse fastq filenames have format: SAMPLENAME_R1.fastq and SAMPLENAME_R2.fastq
fnFs <- sort(list.files(path, pattern="_R1.fastq", full.names = TRUE))
fnRs <- sort(list.files(path, pattern="_R2.fastq", full.names = TRUE))
# Extract sample names, assuming filenames have format: SAMPLENAME_R1.fastq
sample.names <- sapply(strsplit(sub('(^[^_]+_[^_]+)_(.*)$', '\\1 \\2', basename(fnFs)), " "), `[`, 1)
sample.names <- gsub("\\_", ".", sample.names)
plotQualityProfile(fnFs[c(1,3)])
plotQualityProfile(fnRs[c(1,3)])
filtFs <- file.path(path, "filtered", paste0(sample.names, "_F_filt.fastq.gz"))
filtRs <- file.path(path, "filtered", paste0(sample.names, "_R_filt.fastq.gz"))
(323397 - 299657)/323397*100
xx <- c(10294,16484,16823,18723,13123,22915,20570,18788,16405, 17213)
summary(xx)
yy <- c(12588,21917,14728,20734,18210,17880,5252,8654)
summary(yy)
xx <- as.character("AGCCAGGAATCTTGCGCAATGGGCGAAAGCCTGACGCAGCAACGCCGCGTGGGCGATGAAGGCCTTCGGGTCGTAAAGCCCTGTTGTCGGGGACGAAGGGCGAAGGGTTAATAGCCCCTAGCCTGACGGTACCCGACGAGGAAGCCCCGGCTAACTACGTGCCAGCAGCCGCGGTAATACGTAGGGGGCGAGCGTTGTCCGGAATCACTGGGCGTAAAGAGCGTGTAGGCGGCCCGGTAAGTCTGCTGTGAAAACCCGGGGCTCAACCCCGGGCGTGCAGTGGAAACTGCCGGGCTAGAGGGCGGCAGAGGCGAGTGGAATTCCCGGTGTAGCGGTGAAATGCGCAGATATCGGGAGGAACACCAGTAGCGAAGGCGGCTCGCTGGGCCGTCCCTGACGCTGAGACGCGAAAGCTAGGGGAGCGAA")
yy <- as.character("AGCCAGGAATCTTGCGCAATGGGCGAAAGCCTGACGCAGCAACGCCGCGTGGGCGATGAAGGCCTTCGGGTCGTAAAGCCCTGTTGTCGGGGACGAAGGGCGAAGGGTTAATAGCCCCTAGCCTGACGGTACCCGACGAGGAAGCCCCGGCTAACTACGTGCCAGCAGCCGCGGTAATACGTAGGGGGCGAGCGTTGTCCGGAATCACTGGGCGTAAAGAGCGTGTAGGCGGCCCGGTAAGTCTGCTGTGAAAACCCGGGGCTCAACCCCGGGCGTGCAGTGGAAACTGCCGGGCTAGAGGGCGGCAGAGGCGAGTGGAATTCCCGGTGTAGCGGTGAAATGCGCAGATATCGGGAGGAACACCAGTAGCGAAGGCGGCTCGCTGGGCCGTCCCTGACGCTGAGACGCGAAAGCTAGGGGAGCGAA")
xx==yy
nchar(xx)
290779-288930
286112-291351
x <- c(20,25,42,32,11,48,20,22,16,31,20,15,9,14,15,20,18,32)
sum(x)
y <- c(20,24,42,32,11,47,20,22,15,31,20,14,9,14,14,16,18,32)
sum(y)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, fig.width = 12, fig.height = 8)
ps <- readRDS("./Data/ps_zymo.rds")
library(dada2); packageVersion("dada2")
library(magrittr)
library(dplyr)
library(ggplot2)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name),size=3, hjust = 0, nudge_x = 0.05)
p
ggsave("./Zymo_alpha_diversity.eps", plot=p, width = 12, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name),size=3, hjust = 0, nudge_x = 0.05)
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 12, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name),size=3, hjust = 0.1, nudge_x = 0.05) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 12, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name),size=3, hjust = 0.2, nudge_x = 0.05) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 12, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name),size=3, hjust = 0.4, nudge_x = 0.05) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 12, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name),size=3, hjust = 0, nudge_x = 0.05, vjust = .1) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 12, height = 8)
p + geom_text(aes(label = Name),size=3, hjust = 0, nudge_x = 0.05, vjust = .2) + theme_bw()
p + geom_text(aes(label = Name),size=3, hjust = 0, nudge_x = 0.05, vjust = .5) + theme_bw()
p + geom_text(aes(label = Name),size=3, hjust = 0, nudge_x = 0.05, vjust = .01) + theme_bw()
p <- p + geom_text(aes(label = Name),size=3, hjust = 0, nudge_x = 0.05, vjust = .1) + theme_bw()
p
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, fig.width = 15, fig.height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name),size=3, hjust = 0, nudge_x = 0.05, vjust = .1) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 15, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name), size = 4, hjust = 0, nudge_x = 0.05, vjust = .1) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 15, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name), size = 4, position=position_jitter(width=1,height=1)) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 15, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name), size = 4, position=position_jitter(width=.1,height=.11)) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 15, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name), size = 4, position=position_jitter(width=.1,height=.11), hjust = 0) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 15, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name), size = 4, hjust = 0) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 15, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name), size = 4, hjust = 0.1) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 15, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name), size = 4, hjust = -0.1) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 15, height = 8)
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name), size = 4, hjust = -0.1) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 15, height = 10)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
p <- plot_ordination(ps.prop, ord.nmds.bray, color="SampleType", title="Bray MDS", label = "Name")
p
ggsave("./Figures/Zymo_NMDS_BC.eps", plot=p, width = 12, height = 8)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
p <- plot_ordination(ps.prop, ord.nmds.bray, color="SampleType", title="Bray MDS", label = "Name", size = 4)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
p <- plot_ordination(ps.prop, ord.nmds.bray, color="SampleType", title="Bray MDS", label = "Name") + geom_text(size = 4)
p
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
p <- plot_ordination(ps.prop, ord.nmds.bray, color="SampleType", title="Bray MDS")+ geom_text(aes(label = Name), size = 4, hjust = -0.1) + theme_bw()
p
ggsave("./Figures/Zymo_NMDS_BC.eps", plot=p, width = 12, height = 8)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
p <- plot_ordination(ps.prop, ord.nmds.bray, color="SampleType", title="Bray MDS")+
geom_text(aes(label = Name), size = 4, hjust = -0.1) +
theme_bw()
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 12, height = 8)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
p <- plot_ordination(ps.prop, ord.nmds.bray, color="SampleType", title="Bray MDS")+
geom_text(aes(label = Name), osition=position_jitter()) +
theme_bw()
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 12, height = 8)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
p <- plot_ordination(ps.prop, ord.nmds.bray, color="SampleType", title="Bray MDS")+
geom_text(aes(label = Name), size = 4, hjust = -0.2) +
theme_bw()
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 12, height = 8)
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
p <- plot_bar(ps.top20, x="Name", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Figures/Zymo_barplot_top20.eps", plot=p, width = 12, height = 8)
View(p$data)
pd <- p$data
sample_data(ps)$Name <- factor(sample_data(ps.top20)$Name)
ps <- readRDS("./Data/ps_zymo.rds")
if(dim(otu_table(ps))[1]!=ntaxa(ps)){otu_table(ps) <- t(otu_table(ps))}
sum(otu_table(ps))
summary(colSums(otu_table(subset_samples(ps, SampleType == "Standard"))))
summary(colSums(otu_table(subset_samples(ps, SampleType == "Negative"))))
p <- plot_richness(ps, x="SampleType", measures=c("Shannon", "Simpson"), color="SampleType")
p <- p + geom_text(aes(label = Name), size = 4, hjust = -0.1) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 15, height = 10)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
p <- plot_ordination(ps.prop, ord.nmds.bray, color="SampleType", title="Bray MDS")+
geom_text(aes(label = Name), size = 4, hjust = -0.2) +
theme_bw()
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 12, height = 8)
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
sample_data(ps.top20)$Name <- factor(sample_data(ps.top20)$Name)
levels(sample_data(ps)$Name)
levels(sample_data(ps.top20)$Name)
ncont <- paste0("NegativeControl.",seq(1,10))
stan <- paste0("Standard.Dilution.1.",c(1,6,36,216,1296,7776,46656,279936))
sum(c(ncont,stan)%in%levels(sample_data(ps.top20)$Name))
c(ncont,stan)[c(ncont,stan)%in%levels(sample_data(ps.top20)$Name)]
samples.out <- rownames(seqtab.nochim)
# stan <- paste0("Standard.Dilution.1.",c(1,6,36,216,1296,7776,46656,279936))
stan <- c(paste0("Standard.Dilution.1.",c(1,6,36,216,1296,7776,46656)),"StandardDilution.1.279936")
sum(c(ncont,stan)%in%levels(sample_data(ps.top20)$Name))
sample_data(ps.top20)$Name <- factor(sample_data(ps.top20)$Name)
sample_data(ps.top20)$Name
sample_data(ps.top20)$Name <- factor(sample_data(ps.top20)$Name, levels = c(ncont,stan))
sample_data(ps.top20)$Name
levels("StandardDilution.1.279936")
levels(sample_data(ps.top20)$Name)
#levels(sample_data(ps)$Name) <- c(ncont,stan)
p <- plot_bar(ps.top20, x="Name", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
#levels(sample_data(ps)$Name) <- c(ncont,stan)
p <- plot_bar(ps.top20, x="Name", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
pd <- p$data
pd <- p$data
ggsave("./Figures/Zymo_barplot_top20.eps", plot=p, width = 12, height = 8)
p
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, fig.width = 15, fig.height = 10)
ps <- readRDS("./Data/ps_zymo.rds")
if(dim(otu_table(ps))[1]!=ntaxa(ps)){otu_table(ps) <- t(otu_table(ps))}
sum(otu_table(ps))
summary(colSums(otu_table(subset_samples(ps, SampleType == "Standard"))))
summary(colSums(otu_table(subset_samples(ps, SampleType == "Negative"))))
p <- plot_richness(ps, x="SampleType", measures = c("Shannon", "Simpson"), color = "SampleType")
p <- p + geom_text(aes(label = Name), size = 4, hjust = -0.1) + theme_bw()
p
ggsave("./Figures/Zymo_alpha_diversity.eps", plot=p, width = 15, height = 10)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
eval <- ord.mds.bray$eig
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
eval <- ord.mds.bray$eig
eval
ord.mds.bray$values
eval <- ord.mds.bray$values$Eigenvalues
eval
p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
geom_text(aes(label = Name), size = 4, hjust = -0.2) +
theme_bw()
p
eval[1]*100/sum(eval)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
geom_text(aes(label = Name), size = 4, hjust = -0.2) +
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1]))
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 12, height = 8)
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
geom_text(aes(label = Name), size = 4, hjust = -0.2) +
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5))
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 12, height = 8)
plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
geom_text(aes(label = Name), size = 4, hjust = -2) +
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5))
plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
geom_text(aes(label = Name), size = 4, hjust = 2) +
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5))
plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
geom_text(aes(label = Name), size = 4, hjust = 1) +
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5))
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.mds.bray <- ordinate(ps.prop, method="MDS", distance="bray")
evals <- ord.mds.bray$values$Eigenvalues
p <- plot_ordination(ps.prop, ord.mds.bray, color="SampleType", title="Bray MDS")+
geom_text(aes(label = Name), size = 4, hjust = 1) +
theme_bw() +
coord_fixed(sqrt(evals[2] / evals[1])) +
theme(plot.title = element_text(hjust = 0.5))
p
ggsave("./Figures/Zymo_MDS_BC.eps", plot=p, width = 12, height = 8)
ncont <- paste0("NegativeControl.",seq(1,10))
# stan <- paste0("Standard.Dilution.1.",c(1,6,36,216,1296,7776,46656,279936))
stan <- c(paste0("Standard.Dilution.1.",c(1,6,36,216,1296,7776,46656)),"StandardDilution.1.279936")
sample_data(ps)$Name <- factor(sample_data(ps)$Name, levels = c(ncont,stan))
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
p <- plot_bar(ps.top20, x="Name", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Figures/Zymo_barplot_top20.eps", plot=p, width = 12, height = 8)
# true.com.ASV <- taxa_names(ps)[which(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas"))]
true.com.ASV <- taxa_names(ps)[c(2:8,11,17,37,22)]
ps.true <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.true <- prune_taxa(true.com.ASV, ps.true)
p <- plot_bar(ps.true, x="Name", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Zymo_true_genus_barplot.eps", plot=p, width = 12, height = 8)
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
p <- plot_bar(ps.top20, x="Name", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Figures/Zymo_barplot_top20.eps", plot=p, width = 12, height = 8)
# true.com.ASV <- taxa_names(ps)[which(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas"))]
true.com.ASV <- taxa_names(ps)[c(2:8,11,17,37,22)]
ps.true <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.true <- prune_taxa(true.com.ASV, ps.true)
p <- plot_bar(ps.true, x="Name", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Figures/Zymo_barplot_true.eps", plot=p, width = 12, height = 8)
# con.ASV <- taxa_names(ps)[which(!(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas")))]
con.ASV <- taxa_names(ps)[-c(2:8,11,17,37,22)]
length(taxa_names(ps))
length(con.ASV)
# con.ASV <- taxa_names(ps)[which(!(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas")))]
con.ASV <- taxa_names(ps)[-c(2:8,11,17,37,22)]
ps.cont <- prune_taxa(con.ASV, ps)
top20.con <- names(sort(taxa_sums(ps.cont), decreasing=TRUE))[1:20]
ps.cont <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.cont.top20 <- prune_taxa(top20.con, ps.cont)
p <- plot_bar(ps.cont.top20, x="Name", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Zymo_barplot_cont_top20.eps", plot=p, width = 12, height = 8)
# con.ASV <- taxa_names(ps)[which(!(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas")))]
con.ASV <- taxa_names(ps)[-c(2:8,11,17,37,22)]
ps.cont <- prune_taxa(con.ASV, ps)
top20.con <- names(sort(taxa_sums(ps.cont), decreasing=TRUE))[1:20]
ps.cont <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.cont.top20 <- prune_taxa(top20.con, ps.cont)
p <- plot_bar(ps.cont.top20, x="Name", fill="Genus") + facet_wrap(~SampleType, scales="free_x")
p
ggsave("./Figures/Zymo_barplot_cont_top20.eps", plot=p, width = 12, height = 8)
ps.top <- ps
top <- names(sort(taxa_sums(ps.top), decreasing=TRUE))[1:30]
ps.top <- prune_taxa(top, ps.top)
otu_table(ps.top) <- otu_table(ps.top) +1
p <- plot_heatmap(ps.top, sample.label = "Name", taxa.label="Genus")
p
ggsave("./Figures/heatmap_top.eps", plot = p, width = 12, height = 8)
ps.top <- ps
top <- names(sort(taxa_sums(ps.top), decreasing=TRUE))[1:30]
ps.top <- prune_taxa(top, ps.top)
otu_table(ps.top) <- otu_table(ps.top) +1
p <- plot_heatmap(ps.top, sample.label = "Name", taxa.label="Genus", sample.order = c(ncont,stan))
p
ggsave("./Figures/heatmap_top.eps", plot = p, width = 12, height = 8)
c(ncont,stan)
ps.top <- ps
top <- names(sort(taxa_sums(ps.top), decreasing=TRUE))[1:30]
ps.top <- prune_taxa(top, ps.top)
otu_table(ps.top) <- otu_table(ps.top) +1
p <- plot_heatmap(ps.top, sample.label = "Name", taxa.label="Genus", sample.order = "Name")
p
ggsave("./Figures/heatmap_top.eps", plot = p, width = 12, height = 8)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, fig.width = 15, fig.height = 10)
old.new.sampleID <- readxl::read_excel("./Data/mappingTable.xlsx", col_names = FALSE) %>% data.frame
