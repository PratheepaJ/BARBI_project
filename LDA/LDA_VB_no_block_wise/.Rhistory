psByBlock = as.list(ps)
ps
psByBlock = list(ps)
psByBlock
f = stan_model(file = "lda.stan")
K = 5 # number of topics
stan.data.all.blocks = lapply(psByBlock, function(y){
x = t(get_taxa(y))
dimnames(x) = NULL
stan_data = list(K = K,
V = ncol(x),
D = nrow(x),
n = x,
alpha = rep(1, K),
gamma = rep(0.5, ncol(x)))
return(stan_data)
})
stan.fit.all.blocks = lapply(stan.data.all.blocks, function(u){
stan_fit = vb(f,
data = u,
output_samples = 100,
eta = 1,
adapt_engaged = FALSE,
seed = 234
)
return(stan_fit)
})
taxaPrev = apply(otu_table(ps), 1, function(x){sum(x>0)})
min(taxaPrev)
max(taxaPrev)
K = 4 # number of topics
stan.data.all.blocks = lapply(psByBlock, function(y){
x = t(get_taxa(y))
dimnames(x) = NULL
stan_data = list(K = K,
V = ncol(x),
D = nrow(x),
n = x,
alpha = rep(1, K),
gamma = rep(0.5, ncol(x)))
return(stan_data)
})
stan.fit.all.blocks = lapply(stan.data.all.blocks, function(u){
stan_fit = vb(f,
data = u,
output_samples = 100,
eta = 1,
adapt_engaged = FALSE,
seed = 234
)
return(stan_fit)
})
saveRDS(stan.fit.all.blocks, file = "./Results/LDA_vb_no_blocks_ED.rds")
samples.all.blocks <- lapply(stan.fit.all.blocks, function(x){
rstan::extract(x)
})
theta.all.blocks = lapply(samples.all.blocks, function(x){
theta = x$theta # chain * sample * topic
# find theta distirbution of each topic in each sample
names(theta) = c("theta", "Sample", "Topic")
theta.all = melt(theta)
colnames(theta.all) = c("Chain", "Sample", "Topic", "topic.dis")
theta.all$Sample = factor(theta.all$Sample)
#levels(theta.all$Sample) = sample_names(ps)
theta.all$Topic = factor(theta.all$Topic)
levels(theta.all$Topic) = c(paste0("Topic_", seq(1,K)))
return(theta.all)
})
for(i in 1:3){
levels(theta.all.blocks[[i]]$Sample) = sample_names(psByBlock[[i]])
# add control or plasam
theta.all.blocks[[i]] =  mutate(theta.all.blocks[[i]], Group = ifelse(substr(Sample, 1, 2)=="Pt","Plasma", "Control"))
theta.all.blocks[[i]]$Group = factor(theta.all.blocks[[i]]$Group)
}
theta.all.blocks = lapply(samples.all.blocks, function(x){
theta = x$theta # chain * sample * topic
# find theta distirbution of each topic in each sample
names(theta) = c("theta", "Sample", "Topic")
theta.all = melt(theta)
colnames(theta.all) = c("Chain", "Sample", "Topic", "topic.dis")
theta.all$Sample = factor(theta.all$Sample)
#levels(theta.all$Sample) = sample_names(ps)
theta.all$Topic = factor(theta.all$Topic)
levels(theta.all$Topic) = c(paste0("Topic_", seq(1,K)))
return(theta.all)
})
for(i in 1:1){
levels(theta.all.blocks[[i]]$Sample) = sample_names(psByBlock[[i]])
# add control or plasam
theta.all.blocks[[i]] =  mutate(theta.all.blocks[[i]], Group = ifelse(substr(Sample, 1, 2)=="Pt","Plasma", "Control"))
theta.all.blocks[[i]]$Group = factor(theta.all.blocks[[i]]$Group)
}
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 6, angle = 360),
strip.text.x = element_text(size  = 8))
return(p)
})
p.all.blocks[[1]]
u = theta.all.blocks[[1]]
head(u)
tail(u)
sel.samples = c(unique(u$Sample[u$Group == "Control"])[1:10], unique(u$Sample[u$Group == "Plasma"])[1:10])
sel.samples
head(u$Sample[u$Group == "Control"])
unique(u$Sample[u$Group == "Control"])[1:10]
unique(u$Sample[u$Group == "Plasma"])[1:10]
c(unique(u$Sample[u$Group == "Control"])[1:10], unique(u$Sample[u$Group == "Plasma"])[1:10])
sel.samples = c(as.character(unique(u$Sample[u$Group == "Control"])[1:10]), as.character(unique(u$Sample[u$Group == "Plasma"])[1:10]))
sel.samples
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[u$Group == "Control"])[1:10]), as.character(unique(u$Sample[u$Group == "Plasma"])[1:10]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 6, angle = 360),
strip.text.x = element_text(size  = 8))
return(p)
})
p.all.blocks[[1]]
x = samples.all.blocks[[1]]
head(x)
theta = x$theta # chain * sample * topic
# find theta distirbution of each topic in each sample
names(theta) = c("theta", "Sample", "Topic")
theta.all = melt(theta)
head(theta.all)
colnames(theta.all) = c("Chain", "Sample", "Topic", "topic.dis")
theta.all$Sample = factor(theta.all$Sample)
head(theta.all)
#levels(theta.all$Sample) = sample_names(ps)
theta.all$Topic = factor(theta.all$Topic)
levels(theta.all$Topic) = c(paste0("Topic_", seq(1,K)))
theta.all.blocks = lapply(samples.all.blocks, function(x){
theta = x$theta # chain * sample * topic
# find theta distirbution of each topic in each sample
names(theta) = c("theta", "Sample", "Topic")
theta.all = melt(theta)
colnames(theta.all) = c("Chain", "Sample", "Topic", "topic.dis")
theta.all$Sample = factor(theta.all$Sample)
#levels(theta.all$Sample) = sample_names(ps)
theta.all$Topic = factor(theta.all$Topic)
levels(theta.all$Topic) = c(paste0("Topic_", seq(1,K)))
return(theta.all)
})
i=1
levels(theta.all.blocks[[i]]$Sample) = sample_names(psByBlock[[i]])
# add control or plasam
theta.all.blocks[[i]] =  mutate(theta.all.blocks[[i]], Group = ifelse(substr(Sample, 1, 2)=="Pt","Plasma", "Control"))
theta.all.blocks[[i]]$Group = factor(theta.all.blocks[[i]]$Group)
head(theta.all.blocks[[i]])
head(sample_data(psByBlock[[1]]))
dim9theta.all.blocks[[i]]
dim(theta.all.blocks[[i]])
dim(sample_data(psByBlock[[1]]))
dff = left_join(theta.all.blocks[[i]], data.frame(sample_data(psByBlock[[1]])), by = c("Sample" = "SampleCode"))
dim(dff)
head(dff)
tail(dff)
table(dff$block)
theta.all.blocks = lapply(samples.all.blocks, function(x){
theta = x$theta # chain * sample * topic
# find theta distirbution of each topic in each sample
names(theta) = c("theta", "Sample", "Topic")
theta.all = melt(theta)
colnames(theta.all) = c("Chain", "Sample", "Topic", "topic.dis")
theta.all$Sample = factor(theta.all$Sample)
#levels(theta.all$Sample) = sample_names(ps)
theta.all$Topic = factor(theta.all$Topic)
levels(theta.all$Topic) = c(paste0("Topic_", seq(1,K)))
return(theta.all)
})
for(i in 1:1){
levels(theta.all.blocks[[i]]$Sample) = sample_names(psByBlock[[i]])
# add control or plasam
theta.all.blocks[[i]] =  mutate(theta.all.blocks[[i]], Group = ifelse(substr(Sample, 1, 2)=="Pt","Plasma", "Control"))
theta.all.blocks[[i]]$Group = factor(theta.all.blocks[[i]]$Group)
# add block
theta.all.blocks[[i]] = left_join(theta.all.blocks[[i]], data.frame(sample_data(psByBlock[[1]])), by = c("Sample" = "SampleCode"))
}
class(theta.all.blocks[[i]]$block)
theta.all.blocks = lapply(samples.all.blocks, function(x){
theta = x$theta # chain * sample * topic
# find theta distirbution of each topic in each sample
names(theta) = c("theta", "Sample", "Topic")
theta.all = melt(theta)
colnames(theta.all) = c("Chain", "Sample", "Topic", "topic.dis")
theta.all$Sample = factor(theta.all$Sample)
#levels(theta.all$Sample) = sample_names(ps)
theta.all$Topic = factor(theta.all$Topic)
levels(theta.all$Topic) = c(paste0("Topic_", seq(1,K)))
return(theta.all)
})
for(i in 1:1){
levels(theta.all.blocks[[i]]$Sample) = sample_names(psByBlock[[i]])
# add control or plasam
theta.all.blocks[[i]] =  mutate(theta.all.blocks[[i]], Group = ifelse(substr(Sample, 1, 2)=="Pt","Plasma", "Control"))
theta.all.blocks[[i]]$Group = factor(theta.all.blocks[[i]]$Group)
# add block
theta.all.blocks[[i]] = left_join(theta.all.blocks[[i]], data.frame(sample_data(psByBlock[[1]])), by = c("Sample" = "SampleCode"))
theta.all.blocks[[i]]$block = factor(theta.all.blocks[[i]]$block)
}
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[u$Group == "Control"])[1:10]), as.character(unique(u$Sample[u$Group == "Plasma"])[1:10]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group + block,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 6, angle = 360),
strip.text.x = element_text(size  = 8))
return(p)
})
p.all.blocks[[1]]
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[u$Group == "Control"])[1:10]), as.character(unique(u$Sample[u$Group == "Plasma"])[1:10]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample + block ~ Group ,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 6, angle = 360),
strip.text.x = element_text(size  = 8))
return(p)
})
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[u$Group == "Control"])[1:10]), as.character(unique(u$Sample[u$Group == "Plasma"])[1:10]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample + block ~ Group ,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 12, angle = 360),
strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[u$Group == "Control"])[1:10]), as.character(unique(u$Sample[u$Group == "Plasma"])[1:10]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_wrap(Sample + block ~ Group ,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 12, angle = 360),
strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[u$Group == "Control"])[1:10]), as.character(unique(u$Sample[u$Group == "Plasma"])[1:10]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample + block ~ Group ,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 12, angle = 360),
strip.text.x = element_text(size  = 12))
return(p)
})
head(theta.all.blocks[[1]])
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set2")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set2")])[1:5]))
sel.samples
unique(u$Sample[(u$Group == "Control") & (u$block == "Set1")])[1:5]
unique(u$Sample[(u$Group == "Control") & (u$block == "Set1")])
as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set1")])[1:10])
u=theta.all.blocks[[1]]
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set2")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set2")])[1:5]))
sel.samples
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set2")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set2")])[1:5]), as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "SetP")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "SetP")])[1:5]))
sel.samples
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set2")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set2")])[1:5]), as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "SetP")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "SetP")])[1:5]))
# sel.samples = c(as.character(unique(u$Sample[u$Group == "Control"])[1:10]), as.character(unique(u$Sample[u$Group == "Plasma"])[1:10]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample + block ~ Group ,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 12, angle = 360),
strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample + block ~ Group ,
scales = "fixed", margins = TRUE) +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 12, angle = 360),
strip.text.x = element_text(size  = 12))
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set2")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set2")])[1:5]), as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "SetP")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "SetP")])[1:5]))
# sel.samples = c(as.character(unique(u$Sample[u$Group == "Control"])[1:10]), as.character(unique(u$Sample[u$Group == "Plasma"])[1:10]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample + block ~ Group ,
scales = "fixed", margins = TRUE) +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 12, angle = 360),
strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set1")])[1:5]), as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "Set2")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "Set2")])[1:5]), as.character(unique(u$Sample[(u$Group == "Control") & (u$block == "SetP")])[1:5]), as.character(unique(u$Sample[(u$Group == "Plasma") & (u$block == "SetP")])[1:5]))
# sel.samples = c(as.character(unique(u$Sample[u$Group == "Control"])[1:10]), as.character(unique(u$Sample[u$Group == "Plasma"])[1:10]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group + block,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 12, angle = 360),
strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
beta.all.blocks = lapply(samples.all.blocks, function(x){
beta = x$beta
beta.all = melt(beta)
colnames(beta.all) = c("Chain", "Topic", "ASV", "ASV.distribution")
beta.all$Topic = factor(beta.all$Topic)
levels(beta.all$Topic) = c(paste0("Topic_", seq(1,K)))
beta.all$ASV = factor(beta.all$ASV)
return(beta.all)
})
for(i in 1:1){
levels(beta.all.blocks[[i]]$ASV) = taxa_names(psByBlock[[i]])
}
#devtools::install_github("jakobbossek/ggheatmap")
#
heatmap.map.theta.blocks = lapply(beta.all.blocks, function(x){
#sel.spec = as.character(unique(x$ASV)[1:50])
#x = filter(x, ASV %in% sel.spec)
x.summary = x %>% group_by(Topic, ASV) %>% summarise(log_median_beta = log(median(ASV.distribution,
na.rm = TRUE))) %>%
as.data.frame()
# choose species with higher proportions
x.summary = x.summary[order(x.summary$log_median_beta, decreasing = TRUE),]
x.summary = x.summary[1:50, ]
p = ggheatmap(x.summary,
id.vars = c("ASV", "Topic"),
value.name = "log_median_beta"
) + ggtitle("ASV distribution in each topic") +
theme(plot.title = element_text(hjust = 0.5))
return(p)
})
heatmap.map.theta.blocks[[1]]
heatmap.map.theta.blocks[[1]]
heatmap.map.theta.blocks = lapply(beta.all.blocks, function(x){
#sel.spec = as.character(unique(x$ASV)[1:50])
#x = filter(x, ASV %in% sel.spec)
x.summary = x %>% group_by(Topic, ASV) %>% summarise(log_median_beta = log(median(ASV.distribution,
na.rm = TRUE))) %>%
as.data.frame()
# choose species with higher proportions
x.summary = x.summary[order(x.summary$log_median_beta, decreasing = TRUE),]
x.summary = x.summary[1:50, ]
p = ggheatmap(x.summary,
id.vars = c("ASV", "Topic"),
value.name = "log_median_beta"
) + ggtitle("ASV distribution in each topic") +
theme(plot.title = element_text(hjust = 0.5, size = 12), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))
return(p)
})
heatmap.map.theta.blocks[[1]]
