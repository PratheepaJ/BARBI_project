x = filter(y, ASV %in% sel.spec)
p = ggplot() +
geom_density(data = x,
aes(x = ASV.distribution,
y = ..scaled..,
col = Topic,
fill = Topic)) +
facet_wrap(~ASV, scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("ASV distirbution") +
ggtitle("ASV distribution in each topic") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.x= element_text(size = 12))
return(p)
})
post.dis.each.topic.in.each.species[[1]]
post.dis.each.topic.in.each.species = lapply(beta.all.blocks, function(y){
# sel.spec = c(as.character(unique(y$ASV)[1:20]), "s__Pseudomonas_antarctica", "s__Clostridium_formicaceticum", "s__Cuprivavidus_gilardii")
sel.spec = c("s__Pseudomonas_antarctica", "s__Clostridium_formicaceticum", "s__Cupriavidus_gilardii", "s__Human_herpesvirus_7", "s__Acitinomyces_oris")
x = filter(y, ASV %in% sel.spec)
p = ggplot() +
geom_density(data = x,
aes(x = ASV.distribution,
y = ..scaled..,
col = Topic,
fill = Topic)) +
facet_wrap(~ASV, scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("ASV distirbution") +
ggtitle("ASV distribution in each topic") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.x= element_text(size = 12))
return(p)
})
post.dis.each.topic.in.each.species[[1]]
post.dis.each.topic.in.each.species = lapply(beta.all.blocks, function(y){
# sel.spec = c(as.character(unique(y$ASV)[1:20]), "s__Pseudomonas_antarctica", "s__Clostridium_formicaceticum", "s__Cuprivavidus_gilardii")
sel.spec = c("s__Pseudomonas_antarctica", "s__Clostridium_formicaceticum", "s__Cupriavidus_gilardii", "s__Human_herpesvirus_7", "s__Actinomyces_oris")
x = filter(y, ASV %in% sel.spec)
p = ggplot() +
geom_density(data = x,
aes(x = ASV.distribution,
y = ..scaled..,
col = Topic,
fill = Topic)) +
facet_wrap(~ASV, scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("ASV distirbution") +
ggtitle("ASV distribution in each topic") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.x= element_text(size = 12))
return(p)
})
post.dis.each.topic.in.each.species[[1]]
post.dis.each.topic.in.each.species = lapply(beta.all.blocks, function(y){
# sel.spec = c(as.character(unique(y$ASV)[1:20]), "s__Pseudomonas_antarctica", "s__Clostridium_formicaceticum", "s__Cuprivavidus_gilardii")
sel.spec = c("s__Pseudomonas_antarctica", "s__Clostridium_formicaceticum", "s__Cupriavidus_gilardii", "s__Human_herpesvirus_7", "s__Actinomyces_oris")
x = filter(y, ASV %in% sel.spec)
p = ggplot() +
geom_density(data = x,
aes(x = ASV.distribution,
y = ..scaled..,
col = Topic,
fill = Topic)) +
facet_wrap(~ASV, scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("ASV distirbution") +
ggtitle("ASV distribution in each topic") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.x= element_text(size = 12), axis.text = element_text(size = 12),
axis.title=element_text(size = 12))
return(p)
})
post.dis.each.topic.in.each.species[[1]]
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, fig.width = 16, fig.height = 10)
library(phyloseq)
library(ggplot2)
library(magrittr)
library(dplyr)
library(reshape2)
library(rstan)
library(RColorBrewer)
library(wesanderson)
library(ggheatmap)
ps = readRDS("./Data/ps_ED.rds")
set1 = c("1","2","3","4","11","12")
set2 = c("5","6","7","8","9","10")
setP = "P"
ext.num = sample_data(ps)$Extraction_Number
blocks = ifelse(ext.num %in% set1, "Set1", ifelse(ext.num %in% set2, "Set2","SetP"))
sample_data(ps)$block = blocks
sample_data(ps)$block = factor(sample_data(ps)$block)
if(dim(otu_table(ps))[1]!=ntaxa(ps)){
otu_table(ps) = t(otu_table(ps))
}
ps = prune_taxa(taxa_sums(ps) > 0, ps)
ps.standard = subset_samples(ps, Sample_Type %in% c("Plasma"))
prevTaxaP = apply(otu_table(ps.standard), 1, function(x){sum(x>0)})
Contaminants1 = names(prevTaxaP)[prevTaxaP == 0]
length(Contaminants1)
ps = prune_taxa(prevTaxaP > 0, ps)
ps
table(sample_data(ps)$Sample_Type, sample_data(ps)$block)
source("psBlockResults.R")
psBlockResult = psBlockResults(ps,
sampleTypeVar = "Sample_Type", caselevels = c("Plasma"), controllevel="Control", sampleName = "SampleCode", blockVar = "block")
psByBlock = psBlockResult[[1]]
psNCbyBlock = psBlockResult[[2]]
psallzeroInNC = psBlockResult[[3]]
psPlByBlock = psBlockResult[[4]]
f = stan_model(file = "lda.stan")
K = 10 # number of topics
stan.data.all.blocks = lapply(psByBlock, function(y){
x = t(get_taxa(y))
dimnames(x) = NULL
stan_data = list(K = K,
V = ncol(x),
D = nrow(x),
n = x,
alpha = rep(1, K),
gamma = rep(0.5, ncol(x)))
return(stan_data)
})
stan.fit.all.blocks = lapply(stan.data.all.blocks, function(u){
stan_fit = vb(f,
data = u,
output_samples = 100,
eta = 1,
adapt_engaged = FALSE
)
return(stan_fit)
})
psByBlock
ps
K = 9 # number of topics
stan.data.all.blocks = lapply(psByBlock, function(y){
x = t(get_taxa(y))
dimnames(x) = NULL
stan_data = list(K = K,
V = ncol(x),
D = nrow(x),
n = x,
alpha = rep(1, K),
gamma = rep(0.5, ncol(x)))
return(stan_data)
})
stan.fit.all.blocks = lapply(stan.data.all.blocks, function(u){
stan_fit = vb(f,
data = u,
output_samples = 100,
eta = 1,
adapt_engaged = FALSE,
seed = 234
)
return(stan_fit)
})
K = 5 # number of topics
stan.data.all.blocks = lapply(psByBlock, function(y){
x = t(get_taxa(y))
dimnames(x) = NULL
stan_data = list(K = K,
V = ncol(x),
D = nrow(x),
n = x,
alpha = rep(1, K),
gamma = rep(0.5, ncol(x)))
return(stan_data)
})
stan.fit.all.blocks = lapply(stan.data.all.blocks, function(u){
stan_fit = vb(f,
data = u,
output_samples = 100,
eta = 1,
adapt_engaged = FALSE,
seed = 234
)
return(stan_fit)
})
saveRDS(stan.fit.all.blocks, file = "stan_fit_all_ED.rds")
samples.all.blocks <- lapply(stan.fit.all.blocks, function(x){
rstan::extract(x)
})
theta.all.blocks = lapply(samples.all.blocks, function(x){
theta = x$theta # chain * sample * topic
# find theta distirbution of each topic in each sample
names(theta) = c("theta", "Sample", "Topic")
theta.all = melt(theta)
colnames(theta.all) = c("Chain", "Sample", "Topic", "topic.dis")
theta.all$Sample = factor(theta.all$Sample)
#levels(theta.all$Sample) = sample_names(ps)
theta.all$Topic = factor(theta.all$Topic)
levels(theta.all$Topic) = c(paste0("Topic_", seq(1,K)))
return(theta.all)
})
for(i in 1:3){
levels(theta.all.blocks[[i]]$Sample) = sample_names(psByBlock[[i]])
# add control or plasam
theta.all.blocks[[i]] =  mutate(theta.all.blocks[[i]], Group = ifelse(substr(Sample, 1, 1)=="Pt","Plasma", "Control"))
theta.all.blocks[[i]]$Group = factor(theta.all.blocks[[i]]$Group)
}
samples.all.blocks[[1]]$lp__
samples.all.blocks[[2]]$lp__
samples.all.blocks[[3]]$lp__
summary(stan.fit.all.blocks[[1]])
class(summary(stan.fit.all.blocks[[1]]))
length(summary(stan.fit.all.blocks[[1]]))
class(summary(stan.fit.all.blocks[[1]])[[1]])
dim(summary(stan.fit.all.blocks[[1]])[[1]])
View(summary(stan.fit.all.blocks[[1]])[[1]])
psByBlock[[1]]
767*98
108*5+767*5
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 8))
return(p)
})
p.all.blocks[[1]]
head(theta.all.blocks[[1]])
levels(theta.all.blocks[[1]]$Group)
theta.all.blocks = lapply(samples.all.blocks, function(x){
theta = x$theta # chain * sample * topic
# find theta distirbution of each topic in each sample
names(theta) = c("theta", "Sample", "Topic")
theta.all = melt(theta)
colnames(theta.all) = c("Chain", "Sample", "Topic", "topic.dis")
theta.all$Sample = factor(theta.all$Sample)
#levels(theta.all$Sample) = sample_names(ps)
theta.all$Topic = factor(theta.all$Topic)
levels(theta.all$Topic) = c(paste0("Topic_", seq(1,K)))
return(theta.all)
})
theta.all.blocks[[1]]$Sample[1]
levels(theta.all.blocks[[1]]$Sample) = sample_names(psByBlock[[1]])
theta.all.blocks[[1]]$Sample[1]
for(i in 1:3){
levels(theta.all.blocks[[i]]$Sample) = sample_names(psByBlock[[i]])
# add control or plasam
theta.all.blocks[[i]] =  mutate(theta.all.blocks[[i]], Group = ifelse(substr(Sample, 1, 2)=="Pt","Plasma", "Control"))
theta.all.blocks[[i]]$Group = factor(theta.all.blocks[[i]]$Group)
}
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 8))
return(p)
})
p.all.blocks[[1]]
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 8, angle = 180), strip.text.x = element_text(size  = 8))
return(p)
})
p.all.blocks[[1]]
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 8, angle = 90), strip.text.x = element_text(size  = 8))
return(p)
})
p.all.blocks[[1]]
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 8), strip.text.x = element_text(size  = 8))
return(p)
})
p.all.blocks[[1]]
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 8, angle = 270),
strip.text.x = element_text(size  = 8))
return(p)
})
p.all.blocks[[1]]
u = theta.all.blocks[[1]]
sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 6, angle = 180),
strip.text.x = element_text(size  = 8))
p
p+theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 6, angle = -180),
strip.text.x = element_text(size  = 8))
p+theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 6, angle = 360),
strip.text.x = element_text(size  = 8))
p.all.blocks[[2]]
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 6, angle = -180),
strip.text.x = element_text(size  = 8))
return(p)
})
p.all.blocks[[3]]
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 6, angle = 360),
strip.text.x = element_text(size  = 8))
return(p)
})
p.all.blocks[[3]]
beta.all.blocks = lapply(samples.all.blocks, function(x){
beta = x$beta
beta.all = melt(beta)
colnames(beta.all) = c("Chain", "Topic", "ASV", "ASV.distribution")
beta.all$Topic = factor(beta.all$Topic)
levels(beta.all$Topic) = c(paste0("Topic_", seq(1,K)))
beta.all$ASV = factor(beta.all$ASV)
return(beta.all)
})
for(i in 1:3){
levels(beta.all.blocks[[i]]$ASV) = taxa_names(psByBlock[[i]])
}
K = 6 # number of topics
stan.data.all.blocks = lapply(psByBlock, function(y){
x = t(get_taxa(y))
dimnames(x) = NULL
stan_data = list(K = K,
V = ncol(x),
D = nrow(x),
n = x,
alpha = rep(1, K),
gamma = rep(0.5, ncol(x)))
return(stan_data)
})
stan.fit.all.blocks = lapply(stan.data.all.blocks, function(u){
stan_fit = vb(f,
data = u,
output_samples = 100,
eta = 1,
adapt_engaged = FALSE,
seed = 234
)
return(stan_fit)
})
saveRDS(stan.fit.all.blocks, file = "stan_fit_all_ED.rds")
K = 7 # number of topics
stan.data.all.blocks = lapply(psByBlock, function(y){
x = t(get_taxa(y))
dimnames(x) = NULL
stan_data = list(K = K,
V = ncol(x),
D = nrow(x),
n = x,
alpha = rep(1, K),
gamma = rep(0.5, ncol(x)))
return(stan_data)
})
stan.fit.all.blocks = lapply(stan.data.all.blocks, function(u){
stan_fit = vb(f,
data = u,
output_samples = 100,
eta = 1,
adapt_engaged = FALSE,
seed = 234
)
return(stan_fit)
})
4383.79-2506
