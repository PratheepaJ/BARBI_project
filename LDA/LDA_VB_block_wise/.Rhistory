col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 12, angle = 360), strip.text.x = element_text(size  = 2))
return(p)
})
p.all.blocks[[1]]
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control")])), as.character(unique(u$Sample[(u$Group == "Plasma")])[1:10]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5, size =12),
strip.text.y= element_text(size = 12, angle = 360), strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control")])), as.character(unique(u$Sample[(u$Group == "Plasma")])[1:20]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5, size =12),
strip.text.y= element_text(size = 12, angle = 360), strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
p.all.blocks[[1]]
ggsave("./Figures/LDA_HF_set1.eps", plot = p.all.blocks[[1]], width = 12, height = 16)
p.all.blocks[[1]]
ggsave("./Figures/LDA_HF_set1.eps", plot = p.all.blocks[[1]], width = 12, height = 16)
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control")])), as.character(unique(u$Sample[(u$Group == "Plasma")])[1:20]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5, size =12),
strip.text.y= element_text(size = 12, angle = 360), strip.text.x = element_text(size  = 12))
return(p)
})
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control")])), as.character(unique(u$Sample[(u$Group == "Plasma")])[1:20]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("") +
ggtitle("") +
theme(plot.title = element_text(hjust = 0.5, size =12),
strip.text.y= element_text(size = 12, angle = 360), strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
ggsave("./Figures/LDA_HF_set1.eps", plot = p.all.blocks[[1]], width = 12, height = 16)
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control")])), as.character(unique(u$Sample[(u$Group == "Plasma")])[10:19]))
#sel.samples  = unique(u$Sample)[1:20]
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("") +
ggtitle("") +
theme(plot.title = element_text(hjust = 0.5, size =12),
strip.text.y= element_text(size = 12, angle = 360), strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
ggsave("./Figures/LDA_HF_set1.eps", plot = p.all.blocks[[1]], width = 12, height = 16)
p.all.blocks[[2]]
ggsave("./Figures/LDA_HF_set2.eps", plot = p.all.blocks[[2]], width = 12, height = 16)
beta.all.blocks = lapply(as.list(1:2), function(i){
x = samples.all.blocks[[i]]
beta = x$beta
beta.all = melt(beta)
colnames(beta.all) = c("Chain", "Topic", "ASV", "ASV.distribution")
beta.all$Topic = factor(beta.all$Topic)
levels(beta.all$Topic) = c(paste0("Topic_", seq(1,K[[i]])))
beta.all$ASV = factor(beta.all$ASV)
return(beta.all)
})
for(i in 1:2){
levels(beta.all.blocks[[i]]$ASV) = taxa_names(psByBlock[[i]])
}
heatmap.map.theta.blocks = lapply(beta.all.blocks, function(x){
#sel.spec = as.character(unique(x$ASV)[1:50])
#x = filter(x, ASV %in% sel.spec)
x.summary = x %>% group_by(Topic, ASV) %>% summarise(log_median_beta = log(median(ASV.distribution,
na.rm = TRUE))) %>%
as.data.frame()
# choose species with higher proportions
x.summary = x.summary[order(x.summary$log_median_beta, decreasing = TRUE),]
x.summary = x.summary[1:50, ]
p = ggheatmap(x.summary,
id.vars = c("ASV", "Topic"),
value.name = "log_median_beta"
) + ggtitle("ASV distribution in each topic") +
theme(plot.title = element_text(hjust = 0.5, size =12), axis.text = element_text(size = 12),
axis.title=element_text(size = 14, face="bold"))
return(p)
})
heatmap.map.theta.blocks[[1]]
heatmap.map.theta.blocks[[2]]
post.dis.each.topic.in.each.species = lapply(beta.all.blocks, function(y){
# sel.spec = c(as.character(unique(y$ASV)[1:20]), "s__Pseudomonas_antarctica", "s__Clostridium_formicaceticum", "s__Cuprivavidus_gilardii")
sel.spec = c("s__Pseudomonas_antarctica", "s__Clostridium_formicaceticum", "s__Cupriavidus_gilardii", "s__Human_herpesvirus_7", "s__Actinomyces_oris")
x = filter(y, ASV %in% sel.spec)
p = ggplot() +
geom_density(data = x,
aes(x = ASV.distribution,
y = ..scaled..,
col = Topic,
fill = Topic)) +
facet_wrap(~ASV, scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("ASV distirbution") +
ggtitle("ASV distribution in each topic") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.x= element_text(size = 12), axis.text = element_text(size = 12),
axis.title=element_text(size = 12))
return(p)
})
post.dis.each.topic.in.each.species[[1]]
post.dis.each.topic.in.each.species[[2]]
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
fig.width = 16,
fig.height = 12)
library(phyloseq)
library(ggplot2)
library(magrittr)
library(dplyr)
library(reshape2)
library(rstan)
library(RColorBrewer)
library(wesanderson)
library(ggheatmap)
ps = readRDS("./Data/ps_ED.rds")
set1 = c("1","2","3","4","11","12")
set2 = c("5","6","7","8","9","10")
setP = "P"
ext.num = sample_data(ps)$Extraction_Number
blocks = ifelse(ext.num %in% set1, "Set1", ifelse(ext.num %in% set2, "Set2","SetP"))
sample_data(ps)$block = blocks
sample_data(ps)$block = factor(sample_data(ps)$block)
if(dim(otu_table(ps))[1]!=ntaxa(ps)){
otu_table(ps) = t(otu_table(ps))
}
ps = prune_taxa(taxa_sums(ps) > 0, ps)
ps.standard = subset_samples(ps, Sample_Type %in% c("Plasma"))
prevTaxaP = apply(otu_table(ps.standard), 1, function(x){sum(x>0)})
Contaminants1 = names(prevTaxaP)[prevTaxaP == 0]
length(Contaminants1)
ps = prune_taxa(prevTaxaP > 0, ps)
ps
table(sample_data(ps)$Sample_Type, sample_data(ps)$block)
source("psBlockResults.R")
psBlockResult = psBlockResults(ps,
sampleTypeVar = "Sample_Type", caselevels = c("Plasma"), controllevel="Control", sampleName = "SampleCode", blockVar = "block")
psByBlock = psBlockResult[[1]]
psNCbyBlock = psBlockResult[[2]]
psallzeroInNC = psBlockResult[[3]]
psPlByBlock = psBlockResult[[4]]
sample_data(ps)["Pt_113",]
f = stan_model(file = "lda.stan")
K = as.list(c(5,4,3)) # number of topics
stan.data.all.blocks = lapply(as.list(1:3), function(i){
y = psByBlock[[i]]
x = t(get_taxa(y))
dimnames(x) = NULL
stan_data = list(K = K[[i]],
V = ncol(x),
D = nrow(x),
n = x,
alpha = rep(1, K[[i]]),
gamma = rep(0.5, ncol(x)))
return(stan_data)
})
stan.fit.all.blocks = lapply(stan.data.all.blocks, function(u){
stan_fit = vb(f,
data = u,
output_samples = 100,
eta = 1,
adapt_engaged = FALSE,
seed = 234
)
return(stan_fit)
})
saveRDS(stan.fit.all.blocks, file = "./Results/stan_fit_all_ED.rds")
samples.all.blocks <- lapply(stan.fit.all.blocks, function(x){
rstan::extract(x)
})
theta.all.blocks = lapply(as.list(1:3), function(i){
x = samples.all.blocks[[i]]
theta = x$theta # chain * sample * topic
# find theta distirbution of each topic in each sample
names(theta) = c("theta", "Sample", "Topic")
theta.all = melt(theta)
colnames(theta.all) = c("Chain", "Sample", "Topic", "topic.dis")
theta.all$Sample = factor(theta.all$Sample)
#levels(theta.all$Sample) = sample_names(ps)
theta.all$Topic = factor(theta.all$Topic)
levels(theta.all$Topic) = c(paste0("Topic_", seq(1,K[[i]])))
return(theta.all)
})
for(i in 1:3){
levels(theta.all.blocks[[i]]$Sample) = sample_names(psByBlock[[i]])
# add control or plasam
theta.all.blocks[[i]] =  mutate(theta.all.blocks[[i]], Group = ifelse(substr(Sample, 1, 2)=="Pt","Plasma", "Control"))
theta.all.blocks[[i]]$Group = factor(theta.all.blocks[[i]]$Group)
}
levels(theta.all.blocks[[1]]$Sample)
which(levels(theta.all.blocks[[1]]$Sample) == "Pt_113")
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
#sel.samples  = unique(u$Sample)[1:20]
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control")])), as.character(unique(u$Sample[(u$Group == "Plasma")])[c(1:10, 66)]))
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 12, angle = 360),
strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
ggsave("./Figures/LDA_ED_set1.eps", plot = p.all.blocks[[1]], width = 12, height = 16)
levels(theta.all.blocks[[1]]$Sample[theta.all.blocks[[1]]$Group == "Plasma"])
levels(theta.all.blocks[[1]]$Sample)[[theta.all.blocks[[1]]$Group == "Plasma"]]
levels(theta.all.blocks[[1]]$Sample)[theta.all.blocks[[1]]$Group == "Plasma"]
levels(theta.all.blocks[[1]]$Sample[theta.all.blocks[[1]]$Group == "Plasma"])
levels(theta.all.blocks[[1]]$Sample)
levels(theta.all.blocks[[1]]$Sample[theta.all.blocks[[1]]$Group == "Plasma"])
theta.all.blocks[[1]]$Sample[theta.all.blocks[[1]]$Group == "Plasma"]
unique(theta.all.blocks[[1]]$Sample[theta.all.blocks[[1]]$Group == "Plasma"])
which(unique(theta.all.blocks[[1]]$Sample[theta.all.blocks[[1]]$Group == "Plasma"]) == "Pt_113")
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
#sel.samples  = unique(u$Sample)[1:20]
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control")])), as.character(unique(u$Sample[(u$Group == "Plasma")])[c(1:10, 48)]))
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("Topic distirbution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 12, angle = 360),
strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
ggsave("./Figures/LDA_ED_set1.eps", plot = p.all.blocks[[1]], width = 12, height = 16)
col.topic = c(wes_palette("Cavalcanti1", n = 5), wes_palette("Darjeeling1", n = 5)) # sum of two n's should be equal to K.
p.all.blocks = lapply(theta.all.blocks, function(u){
#sel.samples  = unique(u$Sample)[1:20]
sel.samples = c(as.character(unique(u$Sample[(u$Group == "Control")])), as.character(unique(u$Sample[(u$Group == "Plasma")])[c(1:10, 48)]))
u = filter(u, Sample %in% sel.samples)
#u = filter(u, Sample %in% c(sample_names(psByBlock[[1]])[1:20])) # this is to make only few sample plots
p = ggplot() +
geom_density(data = u,
aes(x = topic.dis,
y = ..scaled..,
col = Topic,
fill=Topic)) +
facet_grid(Sample ~ Group,
scales = "fixed") +
scale_color_manual(values = col.topic) +
scale_fill_manual(values = col.topic) +
ylab("density") +
xlab("") +
ggtitle("") +
theme(plot.title = element_text(hjust = 0.5),
strip.text.y= element_text(size = 12, angle = 360),
strip.text.x = element_text(size  = 12))
return(p)
})
p.all.blocks[[1]]
ggsave("./Figures/LDA_ED_set1.eps", plot = p.all.blocks[[1]], width = 12, height = 16)
rm(list = ls())
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
fig.width = 16,
fig.height = 10)
library(phyloseq)
library(ggplot2)
library(magrittr)
library(dplyr)
library(reshape2)
library(rstan)
library(RColorBrewer)
library(wesanderson)
#devtools::install_github("jakobbossek/ggheatmap")
library(ggheatmap)
ps = readRDS("./Data/ps_zymo.rds")
if(dim(otu_table(ps))[1]!=ntaxa(ps)){
otu_table(ps) = t(otu_table(ps))
}
ncont = paste0("NegativeControl.", seq(1, 10))
stan = paste0("Standard.Dilution.1.",c(1, 6, 36, 216, 1296, 7776, 46656, 279936))
sample_data(ps)$Name = factor(sample_data(ps)$Name, levels = c(ncont,stan))
sample_names(ps) = as.character(sample_data(ps)$Name)
ASV = as.character(paste0("ASV_", seq(1,ntaxa(ps))))
ASV.Genus = paste0("ASV_", seq(1,ntaxa(ps)), "_", as.character(tax_table(ps)[,6]))
ASV.Genus.Species = paste0(ASV, "_", as.character(tax_table(ps)[,6]), "_", as.character(tax_table(ps)[,7]))
df.ASV = data.frame(seq.variant = taxa_names(ps), ASV = ASV, ASV.Genus = ASV.Genus, ASV.Genus.Species = ASV.Genus.Species)
taxa_names(ps) = df.ASV$ASV.Genus.Species
# true.com.ASV = taxa_names(ps)[which(tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas"))]
true.com.ASV = taxa_names(ps)[c(2:8,11,17,37,22)]
ps.true = transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.true = prune_taxa(true.com.ASV, ps.true)
ps.true
true.com.ASV = taxa_names(ps)[c(2:8,11,17,22,37)]
# true.com.ASV = taxa_names(ps)[which((tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas")))]
# true.com.ASV = taxa_names(ps)[which((tax_table(ps)[,6] %in% c("Bacillus","Listeria","Staphylococcus", "Lactobacillus", "Escherichia/Shigella", "Enterococcus", "Salmonella", "Pseudomonas"))&(!is.na(tax_table(ps)[,7])))]
diluted.sample.names = sample_names(ps)[3:10]
trueSeq = function(sample.name, true.com.ASV){
df.sample.i = data.frame(ot = otu_table(ps)[, sample.name])
names(df.sample.i) = "ot"
df.sample.i = mutate(df.sample.i, ASV = rownames(df.sample.i))
df.sample.i.true.seq = filter(df.sample.i, (ot > 0) & (as.character(ASV) %in% true.com.ASV))
true.seq.sample.i = as.character(df.sample.i.true.seq$ASV)
return(true.seq.sample.i)
}
true.seq.all.samples = lapply(diluted.sample.names, FUN = trueSeq, true.com.ASV = true.com.ASV)
##true.seq.all.samples
number.of.true.ASVs = lapply(true.seq.all.samples,
function(x) {length(x)})
number.of.true.ASVs
number.of.unique.ASVs.in.all.samples = length(unique(unlist(true.seq.all.samples)))
number.of.unique.ASVs.in.all.samples
ps.prop = transform_sample_counts(ps, function(otu) otu/sum(otu)*100)
ps.true = prune_taxa(unique(unlist(true.seq.all.samples)), ps)
ps.prop.true = prune_taxa(taxa_names(ps.true), ps.prop)
dt = otu_table(subset_samples(ps.prop.true,
SampleType == "Standard")) %>% data.frame()
colnames(dt) = sample_data(subset_samples(ps.prop.true,
SampleType == "Standard"))$Name
#rownames(dt) = df.ASV$ASV.Genus[which(as.character(df.ASV$ASV.Genus.Species) %in% rownames(dt))]
rownames(dt) = df.ASV$ASV.Genus.Species[which(as.character(df.ASV$ASV.Genus.Species) %in% rownames(dt))]
dt = round(dt, digits = 0)
library(knitr)
kable(dt)
blocks = rep("Set1", nsamples(ps))
sample_data(ps)$block = blocks
ps = prune_taxa(taxa_sums(ps) > 0, ps)
ps.standard = subset_samples(ps, SampleType %in% c("Standard"))
prevTaxaP = apply(otu_table(ps.standard), 1, function(x){sum(x>0)})
Contaminants1 = names(prevTaxaP)[prevTaxaP == 0]
length(Contaminants1)
ps = prune_taxa(prevTaxaP > 0, ps)
ps
table(sample_data(ps)$SampleType, sample_data(ps)$block)
colSums(otu_table(ps))
source("psBlockResults.R")
psBlockResult = psBlockResults(ps,
sampleTypeVar = "SampleType", caselevels = c("Standard"), controllevel="Negative", sampleName = "Name", blockVar = "block")
psByBlock = psBlockResult[[1]]
psNCbyBlock = psBlockResult[[2]]
psallzeroInNC = psBlockResult[[3]]
psPlByBlock = psBlockResult[[4]]
# st = sample_names(psByBlock[[1]])[-c(4:10)]
# psByBlock[[1]] = subset_samples(psByBlock[[1]], SampleCode %in% st)
f <- stan_model(file = "lda.stan")
K = 4 # number of topics
ps = psByBlock[[1]]
short.sample.names = c(paste0("NC.", c(1,10)), paste0("Di.", seq(1,8)), paste0("NC.", seq(2,9)))
sample_names(ps) = short.sample.names
x = t(get_taxa(ps))
dimnames(x) = NULL
stan.data <- list(K = K,
V = ncol(x),
D = nrow(x),
n = x,
alpha = rep(1, K),
gamma = rep(0.5, ncol(x))
)
stan.fit = readRDS("./Results/stan_vb_Zymo.rds")
samples <- rstan::extract(stan.fit)
theta = samples$theta # chain * sample * topic
# find theta distirbution of each topic in each sample
names(theta) = c("theta", "Sample", "Topic")
theta.all = melt(theta)
colnames(theta.all) = c("Chain", "Sample", "Topic", "topic.dis")
theta.all$Sample = factor(theta.all$Sample)
levels(theta.all$Sample) = sample_names(ps)
theta.all$Topic = factor(theta.all$Topic)
levels(theta.all$Topic) = c(paste0("Topic_", seq(1,K)))
# add control or dilution series
theta.all =  mutate(theta.all, Group = ifelse(substr(Sample,1,1)=="D","Dilution", "Control"))
theta.all$Group = factor(theta.all$Group)
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2))
p = ggplot() +
geom_density(data = theta.all ,aes(x = topic.dis, y = ..scaled.., col = Topic, fill=Topic)) +
facet_grid(Sample ~ Group, scales = "fixed") +
scale_color_manual(values = col.topic)+
scale_fill_manual(values = col.topic)+
ylab("density") +
xlab("Topic distribution") +
ggtitle("Topic distribution in each sample") +
theme(plot.title = element_text(hjust = 0.5, size = 15), strip.text.y= element_text(size = 12), strip.text.x = element_text(size = 12))
p
ggsave("./Figures/LDA_Zymo.eps", plot = p, width = 12, height = 16)
col.topic = c(wes_palette("Cavalcanti1", n = 2), wes_palette("Darjeeling1", n = 2))
p = ggplot() +
geom_density(data = theta.all ,aes(x = topic.dis, y = ..scaled.., col = Topic, fill=Topic)) +
facet_grid(Sample ~ Group, scales = "fixed") +
scale_color_manual(values = col.topic)+
scale_fill_manual(values = col.topic)+
ylab("density") +
xlab("") +
ggtitle("") +
theme(plot.title = element_text(hjust = 0.5, size = 15), strip.text.y= element_text(size = 12), strip.text.x = element_text(size = 12))
p
ggsave("./Figures/LDA_Zymo.eps", plot = p, width = 12, height = 16)
