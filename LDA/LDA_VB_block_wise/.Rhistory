knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
fig.width = 16,
fig.height = 10)
library(phyloseq)
library(ggplot2)
library(magrittr)
library(dplyr)
library(reshape2)
library(rstan)
library(RColorBrewer)
library(wesanderson)
library(ggheatmap)
ps = readRDS("./Data/ps_ED.rds")
set1 = c("1","2","3","4","11","12")
set2 = c("5","6","7","8","9","10")
setP = "P"
ext.num = sample_data(ps)$Extraction_Number
blocks = ifelse(ext.num %in% set1, "Set1", ifelse(ext.num %in% set2, "Set2","SetP"))
sample_data(ps)$block = blocks
sample_data(ps)$block = factor(sample_data(ps)$block)
if(dim(otu_table(ps))[1]!=ntaxa(ps)){
otu_table(ps) = t(otu_table(ps))
}
ps = prune_taxa(taxa_sums(ps) > 0, ps)
ps.standard = subset_samples(ps, Sample_Type %in% c("Plasma"))
prevTaxaP = apply(otu_table(ps.standard), 1, function(x){sum(x>0)})
Contaminants1 = names(prevTaxaP)[prevTaxaP == 0]
length(Contaminants1)
ps = prune_taxa(prevTaxaP > 0, ps)
ps
table(sample_data(ps)$Sample_Type, sample_data(ps)$block)
source("psBlockResults.R")
psBlockResult = psBlockResults(ps,
sampleTypeVar = "Sample_Type", caselevels = c("Plasma"), controllevel="Control", sampleName = "SampleCode", blockVar = "block")
psByBlock = psBlockResult[[1]]
psNCbyBlock = psBlockResult[[2]]
psallzeroInNC = psBlockResult[[3]]
psPlByBlock = psBlockResult[[4]]
f = stan_model(file = "lda.stan")
K = 5 # number of topics
stan.data.all.blocks = lapply(psByBlock, function(y){
x = t(get_taxa(y))
dimnames(x) = NULL
stan_data = list(K = K,
V = ncol(x),
D = nrow(x),
n = x,
alpha = rep(1, K),
gamma = rep(0.5, ncol(x)))
return(stan_data)
})
